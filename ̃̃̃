{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n",
    "import sqlite3 as lite\n",
    "import sys\n",
    "import json\n",
    "import glob\n",
    "import os \n",
    "\n",
    "import nltk\n",
    "import re\n",
    "import string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def clean_text(text):\n",
    "    # get rid of links\n",
    "    url_pattern = u'((http|ftp|https):\\/\\/)?[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?'\n",
    "    text = [re.sub(url_pattern, ' ', x) for x in text]\n",
    "\n",
    "    # make sure there are spaces between emojis\n",
    "    regex = re.compile(ur'([\\u263a-\\U0001f645])')\n",
    "    text = [regex.sub(ur' \\1 ', item) for item in text]\n",
    "\n",
    "    # get rid of newline characters\n",
    "    text = [re.sub('[\\s+]', ' ', x) for x in text]\n",
    "\n",
    "    # get rid of numbers that are surroudned by spaces\n",
    "    text = [re.sub(\"\\s+[\\d]\", \" <NUMERIC> \", x) for x in text]\n",
    "\n",
    "    emot = {'EMOT01': '\\:\\)', \n",
    "        'EMOT02': '\\:\\(*',\n",
    "        'EMOT03': '\\:P', \n",
    "        'EMOT04': '\\:\\/', \n",
    "        'EMOT05':\"\\:\\\\ \", \n",
    "        'EMOT06': '\\:\\(\\(\\(', \n",
    "        'EMOT07': '\\:D', \n",
    "        'EMOT08': 'D\\:',\n",
    "        'EMOT09': '\\:p', \n",
    "        'EMOT10': '\\:P',\n",
    "        'EMOT11': '\\:3 ',\n",
    "        'EMOT12': '\\:\\\\\\\\', \n",
    "        'EMOT13': '\\:c',\n",
    "        'EMOT14': '\\;\\)',\n",
    "        'EMOT15': '\\;3',\n",
    "        'EMOT16': '\\:oP', \n",
    "        'EMOT17': '\\:\\*',\n",
    "        'EMOT18': \"\\:\\'\\(\",\n",
    "        'EMOT19': '\\:\\-\\)', \n",
    "        'EMOT20': '\\:\\-\\(',\n",
    "        'EMOT21':  '\\:o',\n",
    "        'EMOT22': '\\:O',\n",
    "        'EMOT23': '\\:\\|', \n",
    "        'EMOT24': \"\\:\\'\\)\", \n",
    "        'EMOT25': '\\:DDD', \n",
    "        'EMOT26': '\\:\\-D'\n",
    "          }\n",
    "\n",
    "\n",
    "    for i in range(len(text)):\n",
    "        for key in emot:\n",
    "            text[i] = re.sub(emot[key], ' ' + key + ' ', text[i])\n",
    "\n",
    "    # get rid of reddit formatting stuff\n",
    "    text = [re.sub('\\&\\w\\w\\;', '', x) for x in text]\n",
    "\n",
    "    # remove punctuation\n",
    "    text = [\" \".join(\"\".join([\"\" if ch in string.punctuation else ch for ch in x.lower()]).split()) for x in text]\n",
    "    \n",
    "    return text\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# get season and date aggregates\n",
    "con = lite.connect('rpdr_comments/rpdr_comments.db')\n",
    "with con:\n",
    "    cur = con.cursor()\n",
    "    length = cur.execute(\"select count(*) from comments;\").fetchall()\n",
    "    length = length[0][0]/100\n",
    "    df = cur.execute(\"select body from comments limit '{q}';\".format(q=length))\n",
    "    out = df.fetchall()\n",
    "    \n",
    "text = clean_text(out)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import collections\n",
    "\n",
    "def unigram_and_bigram_counts(comments):\n",
    "    unigram_counts = collections.Counter()\n",
    "    bigram_counts = collections.Counter()\n",
    "    trigram_counts = collections.Counter()\n",
    "\n",
    "    for comment in comments:\n",
    "        x = comment.split()\n",
    "        unigram_counts.update(x)\n",
    "        bigram_counts.update(zip(x[0:-1], x[1:]))\n",
    "        #trigram_counts += collections.Counter(zip(comment[0:-2], comment[1:-1], comment[2:]))\n",
    "    return unigram_counts, bigram_counts#, trigram_counts\n",
    "\n",
    "unigrams, bigrams = unigram_and_bigram_counts(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def score_bigram(bigram, unigram_counts, bigram_counts, delta):\n",
    "    '''Return the score of bigram.\n",
    "    See Section 4 of Word2Vec (see notebook for link).\n",
    "    Args:\n",
    "      - bigram: the bigram to score: ('w1', 'w2')\n",
    "      - unigram_counts: a map from word => count\n",
    "      - bigram_counts: a map from ('w1', 'w2') => count\n",
    "      - delta: the adjustment factor\n",
    "    '''\n",
    "    # START YOUR CODE HERE\n",
    "    if bigram in bigram_counts:\n",
    "        return(1.0*(bigram_counts[bigram] - delta)/(unigram_counts[bigram[0]]*unigram_counts[bigram[1]]))\n",
    "    else:\n",
    "        return(1.0*0) \n",
    "    # END YOUR CODE HERE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "size = 20000\n",
    "\n",
    "delta = 10\n",
    "scored_bigrams = sorted(\n",
    "    [(score_bigram(bigram, unigrams, bigrams, delta), bigram) for bigram in bigrams], reverse=True)\n",
    "\n",
    "pim_bigrams = [((np.log(x[0]) + np.log(size)),x[1]) for x in scored_bigrams]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "phrase_threshold = 1.0\n",
    "phrases = [bigram for score, bigram in pim_bigrams if score > phrase_threshold]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def grouped_stream(words, groups):\n",
    "    groups = set(groups)\n",
    "    prefixes = group_prefix(groups)\n",
    "\n",
    "    output = []\n",
    "    state = []\n",
    "    for i, word in enumerate(words.split()):\n",
    "        state.append(word)\n",
    "        while state:\n",
    "          state_tuple = tuple(state)\n",
    "          if i + 1 < len(words) and state_tuple in prefixes:\n",
    "              break \n",
    "          if state_tuple in groups:\n",
    "              output.append('_'.join(state_tuple))\n",
    "              state = []\n",
    "              break \n",
    "          output.append(state[0])\n",
    "          state = state[1:]\n",
    "    return output\n",
    "\n",
    "def group_prefix(groups):\n",
    "    group_prefix = set()\n",
    "    for group in groups:\n",
    "        for i in xrange(len(group) - 1):\n",
    "            group_prefix.add(group[0 : i + 1])\n",
    "\n",
    "    return group_prefix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "words = [\" \".join(grouped_stream(x, phrases)) for x in text]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "group_unigrams, _ = unigram_and_bigram_counts(words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "top_words = [x[0] for x in group_unigrams.most_common(size)]\n",
    "all_words = ['<UNK>', '<S1>', '<S2>', '<E1>', '<E2>'] + sorted(top_words)\n",
    "word_to_id = {word: wid for wid, word in enumerate(all_words)}\n",
    "id_to_word = {wid: word for word, wid in word_to_id.iteritems()}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class Vocabulary(object):\n",
    "\n",
    "    def __init__(self, words, size):\n",
    "        \n",
    "        word_counts = [(count, word) for word, count in collections.Counter(words).iteritems()]\n",
    "        top_words = zip(*(sorted(word_counts, reverse=True)[:size]))[1]\n",
    "        all_words = ['<UNK>'] + sorted(top_words)\n",
    "        self.word_to_id = {word: wid for wid, word in enumerate(all_words)}\n",
    "        self.id_to_word = {wid: word for word, wid in self.word_to_id.iteritems()}\n",
    "\n",
    "    def to_id(self, word):\n",
    "        return self.word_to_id.get(word, 0)\n",
    "\n",
    "    def to_word(self, wid):\n",
    "        return self.id_to_word.get(wid, '<UNK>')\n",
    "\n",
    "    def size(self):\n",
    "        return len(self.word_to_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def to_word(wid):\n",
    "        return id_to_word.get(wid, '<UNK>')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def to_id(word):\n",
    "    return word_to_id.get(word, 0)\n",
    "#['<S2>', '<S1>'] + text[0].split() + ['<E1>', '<E2>']\n",
    "wordids = [[to_id(word) for word in ['<S2>', '<S1>'] + comment.split() + ['<E1>', '<E2>']] for comment in text]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "vsize = len(all_words)\n",
    "vsize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n",
    "def context_windows(words, C=5):\n",
    "    '''A generator that yields context tuples of words, length C.\n",
    "       Don't worry about emitting cases where we get too close to\n",
    "       one end or the other of the array.\n",
    "       Your code should be quite short and of the form:\n",
    "       for ...:\n",
    "         yield the_next_window\n",
    "    '''\n",
    "    # START YOUR CODE HERE\n",
    "    for i in range(len(words)):\n",
    "        if len(words[i:i+C]) == C:\n",
    "            yield(words[i:i+C])\n",
    "    # END YOUR CODE HERE\n",
    "\n",
    "    \n",
    "def cooccurrence_table(comments, C=2):\n",
    "    '''Generate cooccurrence table of words.\n",
    "    Args:\n",
    "       - words: a list of words\n",
    "       - C: the # of words before and the number of words after\n",
    "            to include when computing co-occurrence.\n",
    "            Note: the total window size will therefore\n",
    "            be 2 * C + 1.\n",
    "    Returns:\n",
    "       A list of tuples of (word, context_word, count).\n",
    "       W1 occuring within the context of W2, d tokens away\n",
    "       should contribute 1/d to the count of (W1, W2).\n",
    "    '''\n",
    "    table = []\n",
    "    # START YOUR CODE HERE\n",
    "    codict = {}\n",
    "    for words in comments:\n",
    "        for item in context_windows(words, C*2+1):\n",
    "            for i in range(C*2+1):\n",
    "                if i == C: \n",
    "                    pass\n",
    "                else:\n",
    "                    try:\n",
    "                        codict[item[C], item[i]] += 1./abs(C-i)\n",
    "                    except:\n",
    "                        codict[item[C], item[i]] = 1./abs(C-i)\n",
    "    table = [(key[0], key[1], codict[key]) for key in codict]\n",
    "    # END YOUR CODE HERE\n",
    "    return table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "len(group_unigrams)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "ctable = cooccurrence_table(wordids, C=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "ctable_wids = np.array([word for word, _, _ in ctable])\n",
    "ctable_cwids = np.array([context_word for _, context_word, _ in ctable])\n",
    "ctable_counts = np.array([count for _, _, count in ctable])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import glove\n",
    "reload(glove)\n",
    "import tensorflow as tf\n",
    "# Hyperparameters.\n",
    "\n",
    "# You may want to shrink num_examples_to_train to finish debugging\n",
    "# and only run it this long once you are training on Wikipedia.\n",
    "learning_rate = 0.003\n",
    "num_examples_to_train = 3e8\n",
    "batch_size = 100\n",
    "embedding_dim = 300\n",
    "\n",
    "alpha = 0.75\n",
    "xmax = 100\n",
    "\n",
    "# Construct the training graph.\n",
    "tf.reset_default_graph()\n",
    "\n",
    "wids_ph = tf.placeholder(tf.int32, shape=[None])\n",
    "c_wids_ph = tf.placeholder(tf.int32, shape=[None])\n",
    "counts_ph = tf.placeholder(tf.float32, shape=[None])\n",
    "\n",
    "with tf.variable_scope('word_embeddings'):\n",
    "    word_embeddings, word_bias, word_embed_matrix = (\n",
    "        glove.wordids_to_tensors(wids_ph, embedding_dim, vsize))\n",
    "with tf.variable_scope('word_context_embeddings'):\n",
    "    word_context_embeddings, word_context_bias, word_context_embed_matrix = (\n",
    "        glove.wordids_to_tensors(c_wids_ph, embedding_dim, vsize))\n",
    "    \n",
    "losses = glove.example_weight(tf.cast(counts_ph, tf.float32), xmax, alpha) *  glove.loss(\n",
    "    word_embeddings, word_bias, word_context_embeddings, word_context_bias,\n",
    "    tf.cast(counts_ph, tf.float32))\n",
    "loss = tf.reduce_mean(losses)\n",
    "\n",
    "# Adam is similar to AdaGrad in that it handles sparse gradients well.\n",
    "# Specifically, you may imagine that some words appear with more context\n",
    "# words than others and with bigger counts.  They therefore are updated\n",
    "# more often and more aggressively (remember the weighting function\n",
    "# you implemented).  Adam backs off updating parameters that it has already\n",
    "# significantly moved around.  (intuitively: the 500th time you backprop\n",
    "# into \"the\", you probably don't have a lot more information to add).\n",
    "#\n",
    "# Here is the original University of Toronto paper detailing the word\n",
    "# done in collaboration with Google DeepMind.\n",
    "# https://arxiv.org/pdf/1412.6980v8.pdf\n",
    "optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate)\n",
    "train_op = optimizer.minimize(loss)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Train the embeddings.\n",
    "# Set up the session & initialize variables.\n",
    "sess = tf.Session()\n",
    "sess.run(tf.initialize_all_variables())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import random\n",
    "import time\n",
    "\n",
    "# Important note:  You do not need to run this cell to completion.\n",
    "# Let it train for 30 minutes or so, then interrupt the kernel and see how good\n",
    "# the nearest-neighbors results look.  Run this cell again to pick up from where\n",
    "# you left off.\n",
    "\n",
    "# An hour on the recommended GCE cloud instance gets reasonably good results.\n",
    "# Two hours cleans up the vectors beautifully.\n",
    "\n",
    "REPORT_LOSS_EVERY = 1000\n",
    "EVAL_BATCH_SIZE = 5000\n",
    "\n",
    "indexes = range(len(ctable_wids))\n",
    "\n",
    "def make_feed_dict(feed_dict_batch_size):\n",
    "    batch_idx = random.sample(indexes, feed_dict_batch_size)\n",
    "    batch_wids = ctable_wids[batch_idx]\n",
    "    batch_cwids = ctable_cwids[batch_idx]\n",
    "    batch_counts = ctable_counts[batch_idx]\n",
    "    return {\n",
    "        wids_ph: batch_wids,\n",
    "        c_wids_ph: batch_cwids,\n",
    "        counts_ph: batch_counts\n",
    "    }\n",
    "\n",
    "num_batches = int(num_examples_to_train / batch_size + 1)\n",
    "\n",
    "print '# training examples:', len(ctable_wids)\n",
    "print '# of epochs:', 1.0 * num_examples_to_train / len(ctable_wids)\n",
    "print '# batches:', num_batches\n",
    "print 'Initial loss:', sess.run(loss, feed_dict=make_feed_dict(EVAL_BATCH_SIZE))\n",
    "\n",
    "current_timer = None\n",
    "for batch in xrange(num_batches):\n",
    "    # Train based on randomly sampled batches of examples.\n",
    "    loss_val, _ = sess.run([loss, train_op], feed_dict=make_feed_dict(batch_size))\n",
    "    \n",
    "    # Do some basic reporting as training progresses.\n",
    "    if batch % REPORT_LOSS_EVERY == 0:\n",
    "        if current_timer:\n",
    "            remaining_reporting_cycles = 1.0 * (num_batches - batch) / REPORT_LOSS_EVERY\n",
    "            cycle_time = time.time() - current_timer\n",
    "            print 'Expected time left:', remaining_reporting_cycles * cycle_time / 60 / 60, 'hours (', cycle_time, 'seconds per', REPORT_LOSS_EVERY, 'batches).'\n",
    "        current_timer = time.time()\n",
    "            \n",
    "        print batch, ':', sess.run(loss, feed_dict=make_feed_dict(EVAL_BATCH_SIZE))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n",
    "word_embed_matrix_val, word_context_embed_matrix_val = sess.run([word_embed_matrix, word_context_embed_matrix])\n",
    "\n",
    "# As per the paper, we take the average of the word's vector when it's the center word of the window\n",
    "# and the vector when it's found in the context.\n",
    "#\n",
    "# There is some (handwave-y) motivation for why we do this in section 4.2 of GloVe.\n",
    "Wv = word_embed_matrix_val + word_context_embed_matrix_val"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def find_nn_cos(v, Wv, k=10):\n",
    "    \"\"\"Find nearest neighbors, by cosine distance.\"\"\"\n",
    "    Z = np.linalg.norm(Wv, axis=1) * np.linalg.norm(v)\n",
    "    ds = np.dot(Wv, v.T) / Z\n",
    "    print ds\n",
    "    nns = np.argsort(-1*ds)[:k]  # sort descending, take best\n",
    "    print nns\n",
    "    return nns, ds[nns]  # word indices, distances\n",
    "\n",
    "def show_nns(v, Wv, k=10):\n",
    "    print \"Nearest neighbors:\"\n",
    "    for i, d in zip(*find_nn_cos(v, Wv, k)):\n",
    "        w = to_word(i)\n",
    "        print \"%.03f : \\\"%s\\\"\" % (d, w)\n",
    "        \n",
    "def word_show_nns(word, Wv, k=10):\n",
    "    show_nns(Wv[to_id(word)], Wv, k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "word_show_nns('thank_you', Wv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "from scipy.cluster.hierarchy import dendrogram, linkage\n",
    "import numpy as np\n",
    "\n",
    "Z = linkage(Wv, 'ward')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "Wv.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "import time\n",
    "\n",
    "start = time.time() # Start time\n",
    "\n",
    "# Set \"k\" (num_clusters) to be 1/5th of the vocabulary size, or an\n",
    "# average of 5 words per cluster\n",
    "num_clusters = Wv.shape[0] / 50\n",
    "\n",
    "# Initalize a k-means object and use it to extract centroids\n",
    "kmeans_clustering = KMeans( n_clusters = num_clusters )\n",
    "idx = kmeans_clustering.fit_predict( Wv )\n",
    "\n",
    "# Get the end time and print how long the process took\n",
    "end = time.time()\n",
    "elapsed = end - start\n",
    "print \"Time taken for K Means clustering: \", elapsed, \"seconds.\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Create a Word / Index dictionary, mapping each vocabulary word to\n",
    "# a cluster number                                                                                            \n",
    "word_centroid_map = dict(zip( all_words, idx ))\n",
    "\n",
    "# For the first 10 clusters\n",
    "for cluster in xrange(10):\n",
    "    #\n",
    "    # Print the cluster number  \n",
    "    print \"\\nCluster %d\" % cluster\n",
    "    #\n",
    "    # Find all of the words for that cluster number, and print them out\n",
    "    words = []\n",
    "    for i in xrange(0,len(word_centroid_map.values())):\n",
    "        if( word_centroid_map.values()[i] == cluster ):\n",
    "            words.append(word_centroid_map.keys()[i])\n",
    "    print words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "\n",
    "import bhtsne\n",
    "import time\n",
    "import numpy as np\n",
    "\n",
    "t0 = time.time()\n",
    "Wv3 = np.asfarray(Wv, dtype='float' )\n",
    "print \"Running Barnes-Hut t-SNE on word vectors; matrix shape = %s\" % str(Wv3.shape)\n",
    "Wv2 = bhtsne.tsne(Wv3)\n",
    "\n",
    "## Uncomment below if you need to use sklearn implementation\n",
    "## (not recommended)\n",
    "# from sklearn.manifold import TSNE\n",
    "# transformer = TSNE(n_components=2, verbose=2)\n",
    "# Wv2 = transformer.fit_transform(Wv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#import plotting as plot_wv\n",
    "#reload(plot_wv)\n",
    "#import bokeh.plotting as bp\n",
    "#bp.output_notebook()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import os\n",
    "from IPython.display import display, HTML\n",
    "import bokeh.plotting as bp\n",
    "\n",
    "\n",
    "def save_bokeh_plot(plot, title=\"\", filename=None, basedir=\"plots\"):\n",
    "  from bokeh.embed import file_html\n",
    "  from bokeh.resources import CDN\n",
    "  import uuid\n",
    "  \n",
    "  if filename is None:\n",
    "    # Generate random hex string\n",
    "    name = uuid.uuid4().hex[:6] + \".html\"\n",
    "    filename = os.path.join(basedir, name)\n",
    "\n",
    "  savedir = os.path.dirname(filename)\n",
    "  if not os.path.isdir(savedir):\n",
    "    os.makedirs(savedir)\n",
    "  \n",
    "  html = file_html(plot, CDN, title)\n",
    "  with open(filename, 'w') as fd:\n",
    "    fd.write(html)\n",
    "  return filename\n",
    "\n",
    "def plot_wv(Wv, vocab, num_words=1000, title=\"Word Vectors\", \n",
    "\t    word_colors=None, word_sizes=None,\n",
    "\t    inline=True, filename=None, **text_kw):\n",
    "  \"\"\"Make an interactive plot of the (first two components) \n",
    "  of the word vectors.\"\"\"\n",
    "  top_counts = vocab.unigram_counts.most_common(num_words)\n",
    "  selected_ids = vocab.words_to_ids(w for w,c in top_counts)\n",
    "  selected_words = vocab.ids_to_words(selected_ids)\n",
    "\n",
    "  px = Wv[selected_ids, 0]\n",
    "  py = Wv[selected_ids, 1]\n",
    "  \n",
    "  p = bp.figure(title=\"Word Vectors\", \n",
    "\t\ttools=\"reset,pan,wheel_zoom,box_zoom\", \n",
    "\t\tactive_scroll=\"wheel_zoom\")\n",
    "  text_kwargs = dict(text_baseline='middle',\n",
    "\t\t     text_align='center')\n",
    "  if word_colors is not None:\n",
    "    text_kwargs['text_color'] = [word_colors[w] for w in selected_words]\n",
    "  if word_sizes is not None:\n",
    "    text_kwargs['text_font_size'] = [word_sizes[w] for w in selected_words]\n",
    "  text_kwargs.update(text_kw)  # override anything\n",
    "  p.text(px, py, text=selected_words, **text_kwargs)\n",
    "  \n",
    "  if inline:\n",
    "    bp.show(p)\n",
    "  else:\n",
    "    p.plot_width = 1200\n",
    "    p.plot_height = 900\n",
    "    filename = save_bokeh_plot(p, title=title, filename=filename)\n",
    "    link_text = \"View plot \\\"%s\\\" in a new tab\" % filename\n",
    "    display(HTML(\"<a href=\\\"{filename}\\\" target='_blank'>{link_text}</a>\".format(**locals())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import itertools\n",
    "import collections\n",
    "\n",
    "token_feed = (canonicalize_word(w) for w in itertools.chain.from_iterable([x.split() for x in text]))\n",
    "\n",
    "vocab_size = 20000\n",
    "vocab = Vocabulary(token_feed, vocab_size)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "\n",
    "#plot_wv(Wv2, vocab, num_words=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import pickle\n",
    "Wv = pickle.load( open( \"data.pkl\", \"rb\" ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "idx[all_words.index('katya')]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    " dict(zip( all_words, idx ))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## BIGRAM MODELING"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from datetime import date\n",
    "from dateutil.relativedelta import relativedelta\n",
    "\n",
    "d = date(2012,01,01)\n",
    "drange = [(d + relativedelta(months=+x)).strftime('%s') for x in range(0, 58)]\n",
    "drange3 = [(d + relativedelta(months=+x)) for x in range(0, 58)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "seasons = [(date(2012,01,30), date(2012,04,30)),\n",
    "           (date(2012,10,22), date(2012,11,26)),\n",
    "           (date(2013,01,28), date(2013,05,06)), \n",
    "           (date(2014,02,24), date(2014,05,19)), \n",
    "           (date(2015,03,02), date(2015,06,01)), \n",
    "           (date(2016,03,07), date(2016,05,16)), \n",
    "           (date(2016,8,25), date(2016,10,27))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "con = lite.connect('rpdr_comments/rpdr_comments.db')\n",
    "score = []\n",
    "body = []\n",
    "user = []\n",
    "ids = []\n",
    "new = []\n",
    "\n",
    "with con:\n",
    "    for pair in [(drange[i], drange[i+1]) for i in range(len(drange)-1)]:\n",
    "        cur = con.cursor()\n",
    "        df = cur.execute(\"select id, c.author, score, body, user_type \\\n",
    "                            from comments as c \\\n",
    "                            left join \\\n",
    "                            (select author, 'new' as user_type from \\\n",
    "                            (select author, min(created_utc) as created from comments GROUP BY author)  \\\n",
    "                            WHERE created BETWEEN {d1} and {d2}) as t on c.author =t.author \\\n",
    "                            WHERE created_utc BETWEEN '{d1}' and '{d2}';\".format(d1=pair[0], d2=pair[1]))\n",
    "        out = df.fetchall()\n",
    "\n",
    "        body.append(clean_text([x[3] for x in out]))\n",
    "        score.append([x[2] for x in out])\n",
    "        user.append([x[1] for x in out])\n",
    "        ids.append([x[0] for x in out])\n",
    "        new.append([x[4] for x in out])\n",
    "\n",
    "unique_users = [set(x) for x in user]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d5b9a5890>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#make some charts\n",
    "import matplotlib.dates as mdates\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "years = mdates.YearLocator()\n",
    "yearsFmt = mdates.DateFormatter('%Y')\n",
    "months = mdates.MonthLocator()\n",
    "\n",
    "ax.xaxis.set_major_locator(years)\n",
    "ax.xaxis.set_major_formatter(yearsFmt)\n",
    "ax.xaxis.set_minor_locator(months)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('# Unique Users')\n",
    "\n",
    "ax.plot(drange3[:-1],[len(x) for x in unique_users], color = 'black')\n",
    "for pair in seasons:\n",
    "    ax.axvspan(pair[0], pair[1], alpha=0.5, color='hotpink', label='season')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.grid(True, linestyle='--', color='lightgrey')\n",
    "\n",
    "fig.savefig('users.png',bbox_inches='tight')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n/wECFfYiq5K5JQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d31e2b850>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.dates as mdates\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "years = mdates.YearLocator()\n",
    "yearsFmt = mdates.DateFormatter('%Y')\n",
    "months = mdates.MonthLocator()\n",
    "\n",
    "ax.xaxis.set_major_locator(years)\n",
    "ax.xaxis.set_major_formatter(yearsFmt)\n",
    "ax.xaxis.set_minor_locator(months)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('# Comments')\n",
    "\n",
    "ax.plot(drange3[:-1],[len(x) for x in body], color = 'black')\n",
    "for pair in seasons:\n",
    "    ax.axvspan(pair[0], pair[1], alpha=0.5, color='hotpink')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.grid(True, linestyle='--', color='lightgrey')\n",
    "\n",
    "fig.savefig('comments.png',bbox_inches='tight') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#subset to only the months with > 4k comments\n",
    "\n",
    "ccount = [len(x) for x in body]\n",
    "\n",
    "score_s = score[13:]\n",
    "body_s = body[13:]\n",
    "user_s = user[13:]\n",
    "ids_s = ids[13:]\n",
    "new_s = new[13:]\n",
    "\n",
    "unique_users_s = unique_users[13:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import itertools\n",
    "import collections\n",
    "\n",
    "def flatten(list_of_lists):\n",
    "    return itertools.chain.from_iterable(list_of_lists)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "class Vocabulary(object):\n",
    "\n",
    "  START_TOKEN = \"<s>\"\n",
    "  END_TOKEN = \"</s>\"\n",
    "  UNK_TOKEN = \"<unk>\"\n",
    "\n",
    "  def __init__(self, tokens, size=None):\n",
    "    self.unigram_counts = collections.Counter(tokens)\n",
    "    # leave space for \"<s>\", \"</s>\", and \"<unk>\"\n",
    "    top_counts = self.unigram_counts.most_common(None if size is None else (size - 3))\n",
    "    vocab = ([self.START_TOKEN, self.END_TOKEN, self.UNK_TOKEN] +\n",
    "             [w for w,c in top_counts])\n",
    "\n",
    "    # Assign an id to each word, by frequency\n",
    "    self.id_to_word = dict(enumerate(vocab))\n",
    "    self.word_to_id = {v:k for k,v in self.id_to_word.iteritems()}\n",
    "    self.size = len(self.id_to_word)\n",
    "    if size is not None:\n",
    "        assert(self.size <= size)\n",
    "\n",
    "    # Store special IDs\n",
    "    self.START_ID = self.word_to_id[self.START_TOKEN]\n",
    "    self.END_ID = self.word_to_id[self.END_TOKEN]\n",
    "    self.UNK_ID = self.word_to_id[self.UNK_TOKEN]\n",
    "\n",
    "  def words_to_ids(self, words):\n",
    "    return [self.word_to_id.get(w, self.UNK_ID) for w in words]\n",
    "\n",
    "  def ids_to_words(self, ids):\n",
    "    return [self.id_to_word[i] for i in ids]\n",
    "\n",
    "  def sentence_to_ids(self, words):\n",
    "    return [self.START_ID] + self.words_to_ids(words) + [self.END_ID]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def canonicalize_digits(word):\n",
    "    if any([c.isalpha() for c in word]): return word\n",
    "    word = re.sub(\"\\d\", \"DG\", word)\n",
    "    if word.startswith(\"DG\"):\n",
    "        word = word.replace(\",\", \"\") # remove thousands separator\n",
    "    return word\n",
    "\n",
    "def canonicalize_word(word, wordset=None, digits=True):\n",
    "    word = word.lower()\n",
    "    if digits:\n",
    "        if (wordset != None) and (word in wordset): return word\n",
    "        word = canonicalize_digits(word) # try to canonicalize numbers\n",
    "    if (wordset == None) or (word in wordset): return word\n",
    "    else: return \"<unk>\" # unknown token"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loaded 4011 sentences (742325 tokens)\n",
      "Building trigram LM... done in 0.72 s\n",
      "Loaded 7936 sentences (1.54564e+06 tokens)\n",
      "Building trigram LM... done in 0.56 s\n",
      "Loaded 13817 sentences (2.72101e+06 tokens)\n",
      "Building trigram LM... done in 0.56 s\n",
      "Loaded 10342 sentences (1.64869e+06 tokens)\n",
      "Building trigram LM... done in 0.13 s\n",
      "Loaded 5499 sentences (867309 tokens)\n",
      "Building trigram LM... done in 0.53 s\n",
      "Loaded 5589 sentences (968150 tokens)\n",
      "Building trigram LM... done in 0.54 s\n",
      "Loaded 3667 sentences (626430 tokens)\n",
      "Building trigram LM... done in 0.54 s\n",
      "Loaded 3184 sentences (494222 tokens)\n",
      "Building trigram LM... done in 0.53 s\n",
      "Loaded 2440 sentences (412168 tokens)\n",
      "Building trigram LM... done in 0.53 s\n",
      "Loaded 3415 sentences (517840 tokens)\n",
      "Building trigram LM... done in 0.50 s\n",
      "Loaded 14279 sentences (2.23491e+06 tokens)\n",
      "Building trigram LM... done in 0.51 s\n",
      "Loaded 12120 sentences (1.87253e+06 tokens)\n",
      "Building trigram LM... done in 0.53 s\n",
      "Loaded 17168 sentences (2.71287e+06 tokens)\n",
      "Building trigram LM... done in 0.13 s\n",
      "Loaded 36106 sentences (5.44588e+06 tokens)\n",
      "Building trigram LM... done in 0.51 s\n",
      "Loaded 49237 sentences (7.84694e+06 tokens)\n",
      "Building trigram LM... done in 0.14 s\n",
      "Loaded 50386 sentences (7.73052e+06 tokens)\n",
      "Building trigram LM... done in 0.13 s\n",
      "Loaded 19962 sentences (2.75799e+06 tokens)\n",
      "Building trigram LM... done in 0.12 s\n",
      "Loaded 21720 sentences (3.04669e+06 tokens)\n",
      "Building trigram LM... done in 0.53 s\n",
      "Loaded 14549 sentences (1.82766e+06 tokens)\n",
      "Building trigram LM... done in 0.52 s\n",
      "Loaded 13210 sentences (1.64052e+06 tokens)\n",
      "Building trigram LM... done in 0.50 s\n",
      "Loaded 17682 sentences (2.25073e+06 tokens)\n",
      "Building trigram LM... done in 0.10 s\n",
      "Loaded 17296 sentences (2.10417e+06 tokens)\n",
      "Building trigram LM... done in 0.49 s\n",
      "Loaded 31427 sentences (3.93015e+06 tokens)\n",
      "Building trigram LM... done in 0.10 s\n",
      "Loaded 56137 sentences (6.74796e+06 tokens)\n",
      "Building trigram LM... done in 0.11 s\n",
      "Loaded 55475 sentences (6.75988e+06 tokens)\n",
      "Building trigram LM... done in 0.11 s\n",
      "Loaded 114380 sentences (1.49244e+07 tokens)\n",
      "Building trigram LM... done in 0.12 s\n",
      "Loaded 133506 sentences (1.78111e+07 tokens)\n",
      "Building trigram LM... done in 0.63 s\n",
      "Loaded 121975 sentences (1.63278e+07 tokens)\n",
      "Building trigram LM... done in 0.12 s\n",
      "Loaded 71821 sentences (8.69901e+06 tokens)\n",
      "Building trigram LM... done in 0.12 s\n",
      "Loaded 69402 sentences (8.53305e+06 tokens)\n",
      "Building trigram LM... done in 0.60 s\n",
      "Loaded 61417 sentences (7.26318e+06 tokens)\n",
      "Building trigram LM... done in 0.58 s\n",
      "Loaded 45252 sentences (5.1036e+06 tokens)\n",
      "Building trigram LM... done in 0.54 s\n",
      "Loaded 38139 sentences (4.12271e+06 tokens)\n",
      "Building trigram LM... done in 0.54 s\n",
      "Loaded 39047 sentences (4.43957e+06 tokens)\n",
      "Building trigram LM... done in 0.11 s\n",
      "Loaded 47273 sentences (5.31229e+06 tokens)\n",
      "Building trigram LM... done in 0.10 s\n",
      "Loaded 62903 sentences (6.76965e+06 tokens)\n",
      "Building trigram LM... done in 0.09 s\n",
      "Loaded 81888 sentences (8.78792e+06 tokens)\n",
      "Building trigram LM... done in 0.09 s\n",
      "Loaded 132255 sentences (1.55658e+07 tokens)\n",
      "Building trigram LM... done in 0.10 s\n",
      "Loaded 144941 sentences (1.78189e+07 tokens)\n",
      "Building trigram LM... done in 0.64 s\n",
      "Loaded 108389 sentences (1.25643e+07 tokens)\n",
      "Building trigram LM... done in 0.11 s\n",
      "Loaded 62527 sentences (6.98102e+06 tokens)\n",
      "Building trigram LM... done in 0.11 s\n",
      "Loaded 56201 sentences (5.81588e+06 tokens)\n",
      "Building trigram LM... done in 0.10 s\n",
      "Loaded 86778 sentences (9.24637e+06 tokens)\n",
      "Building trigram LM... done in 0.09 s\n",
      "Loaded 164023 sentences (1.86758e+07 tokens)\n",
      "Building trigram LM... done in 0.61 s\n"
     ]
    }
   ],
   "source": [
    "# Load a corpus.\n",
    "\n",
    "vocab_size = 20000\n",
    "train_frac = 0.25\n",
    "params = dict(kn=False, add_k=1.0, backoff=5) # Katz smoothing\n",
    "import ngram_lm\n",
    "reload(ngram_lm)\n",
    "import time\n",
    "import random\n",
    "\n",
    "scorel = []\n",
    "random.seed(100)\n",
    "max_length = 30\n",
    "\n",
    "splitix = []\n",
    "for text in body_s:\n",
    "\n",
    "    print \"Loaded %d sentences (%g tokens)\" % (len(text), sum(map(len, text)))\n",
    "\n",
    "\n",
    "    #split_idx = int(train_frac * len(text))\n",
    "    split_idx = 1000\n",
    "    splitix.append(split_idx)\n",
    "    train_sentences = text[:split_idx]\n",
    "    dev_sentences = text[split_idx:]\n",
    "\n",
    "    token_feed = (canonicalize_word(w) \n",
    "                      for w in itertools.chain.from_iterable([x.split() for x in text]))\n",
    "    vocab_pruned = Vocabulary(token_feed, size=vocab_size)\n",
    "\n",
    "\n",
    "    padded_sentences = ([\"<s>\", \"<s>\"] + s.split() + [\"</s>\"] for s in train_sentences)\n",
    "    token_feed = (canonicalize_word(w, wordset=vocab_pruned.word_to_id) \n",
    "              for w in itertools.chain.from_iterable(padded_sentences))\n",
    "\n",
    "    t0 = time.time()\n",
    "    print \"Building trigram LM...\",\n",
    "    lm3 = ngram_lm.SmoothedTrigramLM(token_feed)\n",
    "    print \"done in %.02f s\" % (time.time() - t0)\n",
    "    \n",
    "    padded_dev_sentences = [[\"<s>\", \"<s>\"] + s.split() + [\"</s>\"] for s in dev_sentences]\n",
    "    \n",
    "    padded_trimmed = [x[:(max_length+2)] if len(x) > max_length+2 else x for x in padded_dev_sentences]\n",
    "    \n",
    "    scores = [lm3.score_seq(x, **params) * -1 for x in padded_trimmed]\n",
    "    #avg_scores = (sum(scores)/len(padded_dev_sentences)) * -1\n",
    "    scorel.append(scores)\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "new_scores = []\n",
    "old_scores = []\n",
    "\n",
    "for j in range(len(new_s)):\n",
    "    r = []\n",
    "    for i, x in enumerate(new_s[j][1000:]):\n",
    "        if x is not None:\n",
    "            r.append(i)\n",
    "    new_scores.append(r)\n",
    "\n",
    "for j in range(len(new_s)):\n",
    "    r = []\n",
    "    for i, x in enumerate(new_s[j][1000:]):\n",
    "        if x is None:\n",
    "            r.append(i)\n",
    "    old_scores.append(r)  \n",
    "    \n",
    "new_user_scores = [[scorel[j][i] for i in new_scores[j]] for j in range(len(scorel))]\n",
    "\n",
    "old_user_scores = [[scorel[j][i] for i in old_scores[j]] for j in range(len(scorel))]\n",
    "\n",
    "per_new = [round(float(len(new_user_scores[i]))/len(scorel[i])*100,2) for i in range(len(new_user_scores))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhEAAAF5CAYAAAAh0Xi4AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xl8VNX5+PHPSTIJe0ISMgmJIiBL2AIE2RWDKxrEVlvX\n+rPWb2tbF3CvuFXrhljE2tatWvt1+6qtikhArYhKAiKExbBJghHMDklYAklIzu+PmQlJmJnM3NzZ\nMs/79ZqXyb137n2uJxOenHPuc5TWGiGEEEIIb0UEOgAhhBBChCZJIoQQQghhiCQRQgghhDBEkggh\nhBBCGCJJhBBCCCEMkSRCCCGEEIZIEiGEEEIIQySJEEIIIYQhkkQIIYQQwhBJIoQQQghhSMCTCKXU\nDUqpTUqpWvsrVyl1frtjHlJKlSil6pRSnyilTg1UvEIIIYSwCXgSAewB7gLGA5nAZ8AHSql0AKXU\nXcCNwK+BicBhYIVSKjow4QohhBACQAXjAlxKqX3A7VrrV5RSJcCTWutF9n19gHLg/2mt3w5knEII\nIUQ4C4aeiBZKqQil1OVADyBXKTUQSAb+6zhGa30AWAtMCUyUQgghhACICnQAAEqpUUAe0A04CPxE\na71DKTUF0Nh6Hlorx5ZcCCGEECJAgiKJALYDGUAscCnwL6XUGUZPppRKAM4DvgeOmhGgEEIIESa6\nAacAK7TW+9wdGBRJhNb6GFBk/zZfKTURuAVYACjAStveCCuQ7+aU52VkZLze1NR0wo7MzEwyMzMp\nLy/nkUcecRvX/PnzsVqtLvfn5OSQk5Pjcn9ycjL33HOP22s8+uijlJWVudw/a9YsZs2a5XK/3Mdx\nch/HyX3YyH0cJ/dxnNyHjQf3cRXwhrsDgnVi5X+BYq31dW4mVl6jtX7HxfunAqtfe+xJXvj32yy6\ne77b6817/JEOj/H22HmPP8KiO/4Azc0wIBVinD9MMm/ePBYtWuTZtT08NpDn9MW1zznnHD755JPO\nnbO+AYp/hIgI5j35mG/au/1xTc0ntL+0t5/au/Uxt9zCot/PhYgIiHQ/DaxT7e1MUzPznniURc/+\nxeXvgJZzhkB7++KcZrd3y3GPP9HymXfV7mZ/vr2O0Yz/5wZ+t3V039u++46r/3AHwDStda67cwW8\nJ0Ip9SiQA/wA9MaW+cwAzrUf8jRwr1JqF7bhiYeBvcAHbk57FCB9yBBi+/Rh/JgMtzF4coy3x8b2\n6cP40WOgoRGGDYRuMc6Pi41l/Pjxnl3bw2MDeU5fXDsiIqLz5zxaDz3iINriu/Zuf9yxphPaX9rb\nT+3d/pj0kRBtgahI98d2pr2dOdZEbO/ejB83zuXvgDZxBnl7++KcZrd3y3HjxrV85l21u9mfb69j\nNOO+Dfxu8+J3YIfTAQKeRABJwKtAClALbAbO1Vp/BqC1XqCU6gE8D8QBXwKztNYNnpz8iuyLTDnG\n22M9Pu6KKzy/tofHBvKcvrh2crLnc2g9Oae0d3Bf2/T2/tnPPT+fye0NcMX5F3p2XAi0ty/OaXZ7\ne3WcL9o7kP/PfXA/HQnK4YzOUkqNB9avf/d9j//i9AkXmarwjjfdnS4drYcduz36a9Q00v6GmNLe\nrQWi7R3kZ6BDpre3g6/bPVja1gf3uWHzJjIvvRggU2u9wd2xQVUnQgghhBChQ5IIEfRmz54d6BCE\nH0l7hxdp79AmSYQIenPmzAl0CMKPpL3Di7R3aJMkQgghhBCGSBIhhBBCCEMkiRBBLzY2NtAhCD+S\n9g4v0t6hTZIIEfTi4uICHYLwI2nv8CLtHdokiRBCCCGEIZJECCGEEMIQSSKEEEIIYYgkEUIIIYQw\nRJIIIYQQQhgiSYQQQgghDJEkQgS9hgaPVn0XXYS0d3iR9g5tkkSIoFdaWhroEIQfSXuHF2nv0CZJ\nhBBCCCEMkSRCCCGEEIZIEiGEEEIIQySJEEIIIYQhkkQIIYQQwhBJIoQQQghhSNgnEd99v5vP164J\ndBhCCCFEyIkKdACBtvAfL/L512vYseKzQIciXEhJSQl0CMKPpL3Di7R3aAv7nojSygrKq6oCHYZw\nIzo6OtAhCD+S9g4v0t6hLeyTiLLKSmoPHuRofX2gQxFCCCFCStgnEaWVlQBU7t8X4EiEEEKI0BLW\nSURzczPl+2xDGTKkIYQQQngnrJOI/TU1NDY2AlCxT3oihBBCCG+EdRJRVlXZ8nWFDGcIIYQQXgnv\nJKLyeBIhwxlCCCGEd8I6iSitrADg5P79qdgnSUSwqqmpCXQIwo+kvcOLtHdoC+skoqyqktjevRnQ\nP7VlgqUIPrW1tYEOQfiRtHd4kfYObeGdRFRWkpzYj6SEBJlYKYQQQngprJOI0spKUpKSsCYkypwI\nIYQQwkthnUSUVTl6IhLl6QwhhBDCS+GdRFRWktIvCWtiIpX799Pc3BzokIQQQoiQEdZJRGllBcn9\nEkmKT6CpqYn9MktYCCGE8FjYJhFH6+upOXCgZWIlSMEpIYQQwhthm0Q4Ck2lJNmGM0AKTgUri8US\n6BCEH0l7hxdp79AWvkmEveR1m54IecwzKPXv3z/QIQg/kvYOL9LeoS18kwh7T0Ryv3706dWbmOho\nyvdVdvAuIYQQQjgEPIlQSv1BKfW1UuqAUqpcKfWeUmpou2NeUUo1t3st68x1SysriIqKIiGuL0op\n22Oe0hMhhBBCeCzgSQRwOvAXYBJwNmABPlZKdW93XA5gBZLtrys6c9GyykqsCYlERNj+F1gliRBC\nCCG8EhXoALTWF7T+Xil1LVABZAJftdpVr7U2bbyhrKqS5H79Wr5PSkiQ9TOEEEIILwRDT0R7cYAG\n9rfbfqZ9uGO7UupvSqn4zlyktLKClHZJhPRECCGEEJ4LqiRCKaWAp4GvtNZbW+3KAa4BZgJ3AjOA\nZfbjDXEsvuUg62cIIYQQ3gn4cEY7fwNGANNab9Rav93q2wKl1BagEDgTWOnsRBkZGdz69EIsUW2f\nQZ59wQXMufBCfnL5ZRwpKWvZnpSQcEKxqZLGehpxXQo7NiKKuEjXzzg36GZKI5qgpAQinedrKSkp\nREdHuzxHTU2N26VyLRZLh49IlZSU0NjY6HJ/bGwscXFxLvc3NDRQWlrq9hohcR9oSpvqQbvOPVOi\nYohWrnPrmqZGapuPudxvIYL+lhiX+0Haw8Fv9xGf4PYapnzOj9U739msIUKT0thIdDfXPxdh1R7+\nuo+mZohosv233WfelM+5cv/Pp9/aw81+T+5j1YoVvLl0SZvttQcOuL1ua0pr7fHBvqSUehaYDZyu\ntf7Bg+MrgPla6xed7BsPrF//7vuMH5Nxwnubm5vpNno4T99zH7+76hcAvL7kfa6+fR6HNhbQs0eP\nzt6OzbEmaGiEYQPBzS8Q4V5JSUnnnyU/Wg87dkO0BaIizQmsI9L+hpjS3q0Fou0d5GegQ6a3t4Ov\n2z1Y2tYH97lh8yYyL70YIFNrvcHdsUExnGFPIOYAWR4mEGlAAuA+TXOhuraWxsbGNsMZUnAqeLnL\n5kXXI+0dXqS9Q1vAkwil1N+Aq4ArgcNKKav91c2+v6dSaoFSapJSaoBS6izgfWAnsMLINUsrKwBb\nyWsHa4Kt9HXFfpkXIYQQQngi4EkEcAPQB/gcKGn1+rl9fxMwBvgA2AG8CKwDztBaG0phW6pVtumJ\nkPUzhBBCCG8EfGKl1tptIqO1Pgqcb+Y1W9bNaPWIZ2JfW+VKGc4QQgghPBMMPRF+V1pZQWzv3nTv\n1q1lm6MEthScEkIIITwTlklE+xoRDlJwSgghhPBceCYRVVVthjIcrIlScEoIIYTwVFgmEbaS10kn\nbE+KP7HglAi82NjYQIcg/EjaO7xIe4e2sEwiyiorXfZEyHBG8HFX1U10PdLe4UXaO7SFZRJRWlnh\nck6EDGcIIYQQngm7JOJofT01Bw60WcHTISk+gX011Rw75rrWuBBCCCFsvE4ilFIn2ctOO76fqJR6\nWin1a3ND841yJzUiHKyJiWitqaqu9ndYQgghRMgx0hPxBpAFoJRKBj4BJgKPKKXuNzE2nyi1V6t0\nOrHSUfpaakUIIYQQHTKSRIwCvrZ//XPgW631VGzrX1xrUlw+01Ly2llPREsSIZMrhRBCiI4YSSIs\nQL3967MBx0Lk24EUM4LypbKqypbqlO05VvKUqpVCCCFEx4wkEQXADUqp04FzgOX27f2BoP8TvrSi\nAmtCIhERJ956zx496Nmjh/REBJmGhoZAhyD8SNo7vEh7hzYjScRdwG+wrbr5ptZ6k337RRwf5gha\nZVXOa0Q4JMXLY57BprS0NNAhCD+S9g4v0t6hzatVPJVSCigCTgaitNatH2N4AagzMTafKKtyvm6G\nQ1KCVK0UQgghPOFtT4QCdgHJ7RIItNbfa60rTIvMR0orKpzWiHCQ9TOEEEIIz3iVRGitm4HvgATf\nhON7rhbfckiKl5U8hRBCCE8YmRNxN/CkUmqU2cH4mta6w+EMa2IiFfulJ0IIIYToiFdzIuz+BfQA\nNimlGoAjrXdqrePNCMwX9tfU0NjY6LTQlINj/QytNbYpIEIIIYRwxkgSMdf0KPykzE3JawdrQj/q\nGxo4ePgQfXr19ldoQgghRMjxOonQWr/qi0D8obTCNu+zo6czAMqrqiSJEEIIIdwwtIqnUmqwUupP\nSqk3lVJJ9m2zlFIjzQ3PXJ70RDiSCJlcGTxSUoK+EKowkbR3eJH2Dm1GVvGcAWwBJgE/BXrZd2UA\nfzQvNPOVVVXSp1dvenTv7vIYx/oZ8phn8IiOjg50CMKPpL3Di7R3aDPSE/E4cK/W+hygdb3Sz4DJ\npkTlIx3ViACIj4sjMjJSCk4JIYQQHTCSRIwG3nOyvQJI7Fw4vtVRjQiAiIgI+sXHy3CGEEII0QEj\nSUQNzlfrHAf82LlwfKus0n2NCAfb+hmVfohICCGECF1Gkoi3gCeUUsmABiKUUtOAhdhqSASt0soK\nUpJc14hwsBWckp4IIYQQwh0jScQ9wHZgD7ZJlVuBL4Bc4E/mhWa+jqpVOjgKTgkhhBDCNa+TCK11\ng9b6f4BBQDZwNTBca/0LrXWT2QGa5Wh9PdW1tR4OZyTKnAghhBCiA4bqRABorfdorZcB/wZ6KqX6\nmheW+RxzHFKSOk4irImJlO+TnohgUVNTE+gQhB9Je4cXae/QZqROxNNKqV/Zv44EVgEbgD1KqTPN\nDc88LYWmPBzOqDlwgIaGhg6PFb5XW1sb6BCEH0l7hxdp79BmpCfiUmCT/evZ2IY1hgOLgEdMist0\npRUdV6t0cBScqty/36cxCSGEEKHMSBKRCJTZv74AeFtrvRN4GVsNiaBUVlVJZGQkiX07XmS0Zf0M\nGdIQQgghXDKSRJQDI+xDGecDn9i39wCCdmJlWWUl1oREIiI6vmVroq0nQiZXCiGEEK4ZWQr8FeBt\noBRbnYhP7dsnYXv0MyiVVlZ4NJQB0C/++EqeQgghhHDOyFLgDyqlvgVOAt7RWtfbdzVhW1cjKJVV\nVZLSr+NCUwDdYmLo06s3FfsliRBCCCFcMdITgdb6XSfbXu18OL5TWlHBmGHDPT7empggwxlCCCGE\nG14nEUqp+93t11o/ZDwc3ymrquK80z3riQBbwSkZzggOFosl0CEIP5L2Di/S3qHNSE/ET9p9bwEG\nAseAQiDokgittcclrx1k/Yzg0b9//0CHIPxI2ju8SHuHNiNzIsa136aU6gP8E+dLhAfc/poaGhsb\nPZ5YCbbHPNds/MGHUQkhhBChzXDZ69a01geAB4CHzTif2RzVKj2dWAm2glMyJ0IIIYRwzZQkwi7W\n/vKKUuoPSqmvlVIHlFLlSqn3lFJDnRz3kFKqRClVp5T6RCl1qqfXKKv0vOS1Q1JCAhX799Hc3Ozx\ne4QQQohwYmRi5c3tNwEpwC+AHAMxnA78BfjGHs9jwMdKqXSt9RH7Ne8CbgSuAb7HtuT4CvsxHS5w\nUVpZAXhW8tohKSGBY8eOUXPgAPFxcV7dkBBCCBEOjEysnNfu+2agEngVWwLgFa31Ba2/V0pdC1QA\nmcBX9s23AA9rrZfaj7kGW+XMi7EVvnKrrKqSPr1606N7d4/jcqyfUbFvnyQRQgghhBNGJlYO9EUg\nrcRhq4S5H0ApNRBIBv7bKoYDSqm1wBQ8SSIqK0nul+hVEMfXz6hk+ODBXr1XCCGECAdmzonoNKWU\nAp4GvtJab7VvTsaWVJS3O7zcvq9DpZXePd4JYLUfL5MrhRBCCOeCKokA/gaMAC4386RllZ6XvHaI\n7d2baEu0FJwKAiUlJYEOQfiRtHd4kfYObYbKXvuCUupZbEuLn661Lm21qwzb5E0rbXsjrEC+q/Nl\nZGRw69MLsURZ2H/kMIcqGznn19cx+4ILmHPhhViIoL8lxl08PPjgAwwZk0Fx4xGnx8RGRBEX6bra\nWoNupjSiCUpKINJ5vpaSkkJ0dLTLc9TU1FBbW+tyv8Vi6bBYS0lJCY2NjS73x8bGEudm3kdDQwOl\npaUu94Nv78MRe6fvA01pUz1o5fKYlKgYopXr3LqmqZHa5mMu93f0cwWh3x4OvrqPurq6lvOach/2\nBfVcKWmspxHXT2F59Dk/Vu98Z7OGCE1KYyPR3Vz/XARze7Tmi5+r9jGbdh9NzRDRZPtvu8+8KZ9z\n5f6fT7+1h5v9ntzHqhUreHPpkjbbaw8ccHvd1pTW2uODfcWeQMwBZmiti5zsLwGe1Fovsn/fB1tC\ncY3W+h0nx48H1q9/933Gj8kg/rSx3Hn9b7j7N7/1Kq7Mn8xmwqjRPP/wowbuCjjWBA2NMGwguPkF\nItwrLi5mwIABnTvJ0XrYsRuiLRAVaU5gHZH2N8SU9m4tEG3vID8DHTK9vR183e7B0rY+uM8NmzeR\neenFAJla6w3ujg14T4RS6m/AFcBFwGGllNW+q1ZrfdT+9dPAvUqpXdge8XwY2At80NH56xvqqa6t\n9Xo4AyApXhbhEkIIIVwxUifiB+BzYBXwuda6sJMx3IBt4uTn7bb/EvgXgNZ6gVKqB/A8tqc3vgRm\neVIjoqXQlJdPZ4Bt/Yzvir/3+n1CCCFEODAysfIe4ChwF/CdUmqPUuo1pdT/KKWGeHsyrXWE1jrS\nyetf7Y57UGvdX2vdQ2t9ntZ6lyfnN1Ly2iEpIUEmVgohhBAuGKkT8RrwGoBSKgWYAWRje7IiAvDz\noKN7x3sivHvEE2T9DCGEEMIdQ3Mi7EML04EzgSxgHPAtJw5JBFxpZSWRkZEk9o33+r1JCQkcPHyI\nI0eP0r1bNx9EJ4QQQoQuI3MicrElDduwJQ2PA19oravNDc0cZZWVWBMSiYjwfuTGmugofV3FgNQ0\ns0MTHoqN9XpdNxHCpL3Di7R3aDMyJ2I4cBjYbn9tC9YEAmxzIowMZQAkxduSCJkXEVjunqUWXY+0\nd3iR9g5tRpKIBGAmsAY4D1itlPpRKfWGUup/TI3OBKWVFV6XvHZwrJ9RsV/mRQghhBDteZ1EaJvN\nWutngEuBWcAnwM+A50yOr9NsJa+NJRH94m3zKGRypRBCCHEir5MIpdR4pdStSqklwD4gDxgD/AX4\nqcnxdVpppfHhDIvFQnxcnAxnCCGEEE4YeTrja2xrVqwCXsQ2qdJ1sfQA0to+J8LgcAbYH/OU4Qwh\nhBDiBEaSiHitteercwTQgUOHaGxsJCXJ+0JTDlJwSgghhHDOyJyIA0qpOKXU9Uqpx5RS8dAyzJFq\nfojGVVXvB+h8T4TMiRBCCCFOYGROxBjgO2xlr2/HtpYF2OZDPGZeaJ23r6YGMFat0iEpIYHyfdIT\nEUgNDR0ukSK6EGnv8CLtHdqMPOL5Z+AVrfUQbGtoOCwDzjAlKpNU1djKV3SmJyIpIYEKSSICqrS0\nNNAhCD+S9g4v0t6hzUgScRq21TTb+xFI7lw45qqqrqZ3z1707NHD8DmsCYlUVVfT1NRkYmRCCCFE\n6DOSRNQDfZxsHwpUdi4cc+2rqSYlyXgvBEBSQiLNzc3sqwnaopxCCCFEQBhJIpYA9yulLPbvtVLq\nZOAJ4N+mRWaCfTXVnRrKgNbrZ8jkSiGEEKI1I0nEbUAvoALojq1exC7gIDDfvNA6r6q680mEo/S1\nPOYphBBCtOV1nQh7YalzlFLTsVWq7AVs0Fp/anZwnVVVU83UzAmdOoc1wd4TIQWnhBBCiDaMFJsC\nQGv9FfCVibGYrqq6ptM9ET179KB7t24ynCGEEEK0YyiJUEqdBZwFJNFuSERrfZ0JcZni4OFDnaoR\nAaCUkqqVQgghhBNeJxFKqQeA+4FvgFJAmx2UWeJj4+jfiZLXDraqlZJEBEpKSkqgQxB+JO0dXqS9\nQ5uRnogbgGu11v9rdjBm++Qf/2T8mIxOn0eqVgZWdHR0oEMQfiTtHV6kvUObkaczooFcswMJZrJ+\nhhBCCHEiI0nES8CVZgcSzJISEqUnQgghhGjHyHBGN+DXSqmzgc1AY+udWutbzQgsmFgTbT0RWmuU\nUoEORwghhAgKRpKIMcBG+9ej2u0L2kmWnZGUkMCRo0c5XFdHr549Ax2OEEIIERSMFJvK8kUgwSwp\n3l61cl+VJBFCCCGEnZE5EWFH1s8QQgghTiRJhAdk/YzAqqmpCXQIwo+kvcOLtHdokyTCAwlxfYmI\niJCCUwFSW1sb6BCEH0l7hxdp79AmSYQHIiMjSezbVx7zFEIIIVqRJMJDjsc8hRBCCGFjdAGu/sB0\nnC/A9YwJcQWdpHhJIoQQQojWjCzAdS3wPNAA7KNtbQgNdM0kIiGBkoryQIchhBBCBA0jwxkPAw8B\nsVrrU7TWA1u9BpkcX9CQ4QwhhBCiLSNJRA/gLa11s9nBBLOkeFnJUwghhGjNSBLxD+BnZgcS7KyJ\nieyvqaGxsbHjg4WpLBZLoEMQfiTtHV6kvUObkYmVfwCWKqXOB7YQBgtwwfGCU5X799Pfag1wNOGl\nf//+gQ5B+JG0d3iR9g5tRpOI84Ad9u/bT6zskqwJx0tfSxIhhBBCGEsibgOu01r/0+RYgpqjJ6Ji\nv8yLEEIIIcDYnIh6YLXZgQS7JHtPRFllZYAjEf6gteYPCxewefu2QIcihBBBy0gSsRi4yexAgl33\nbt2Ij4vjx3KpFREONm/fxuMv/J2X//1OoEMRQoigZSSJmAj8P6VUkVLqQ6XUf1q/jAShlDpdKbVE\nKfWjUqpZKXVRu/2v2Le3fi0zcq3OSLVa+bG8zN+XFQHwxtIlAKxevz7AkQghRPAyMieiBjCULLjR\nE9iI7fFRV+fOAa4FlP37epNj6FCaNYW9ZZJEdHXNzc289dGHxMfFkb+tgMN1dfTs0SPQYQkDmpqa\nqNm3j4RAByJEF+V1T4TW+pfuXkaC0Fov11rfr7X+gONJQnv1WutKrXWF/eX39WNtPREynNHV5W5Y\nzw8lJfxp7m00NTXx9eZNgQ5JGPTyyy8zfGwGTU1NgQ5FiC7J8CqeSql+Sqnp9lc/M4Ny4UylVLlS\nartS6m9KqXg/XLONtOQU9paX+vuyYa+kpMSv13tj6RJOSunP//z8cmJ792b1hm/8ev1wZ2Z7b9q0\niaqqKnZ8v9u0cwpz+fvzLczldRKhlOqplHoZKAW+sL9KlFL/UEr5qs83B7gGmAncCcwAlimlXPVa\n+ESq1Up5VZVUrfQzf/7/bmxs5J2cZVyRPZuoqCimjB0v8yL8zMz2LioqAiBfnrIJWvL7NLQZ6Yn4\nM7Z/xGcDcfbXHPu2p8wL7Tit9dta66Va6wKt9RIgG9sEzzN9cT1X0pJT0FpTWlnhz8sKP/o0dzVV\n1fu5Mts2t3daZiZ5GzfQ3BxWS8V0GYWFhQDk75AkQghfMDKx8hLgUq315622LVNKHQHeBn5rRmDu\naK13K6WqgFOBlc6OycjI4NanF2KJaluXffYFFzDnwguxEEF/S4zb65Q01tPI8X88UkeP4JlnnmF/\ndCS68QixEVHERbqu+96gmymNaIKSEoh0nq+lpKQQHR3t8hw1NTXU1rqe/mGxWDosG1tSUuI224+N\njSUuLs7l/oaGBkpL3Q/jhMR9oCltqgftugPrwy8+J33wqYwZng7AtPETuO/pP1Pw3U5GDxtOTVMj\ntc3HXN+HJz9X0h6A6/uoq6ujuLgY6Nx9aK257LLLePjhh9mwbavLc7T/nLfn0ef8mIt53s0aIjQp\njY1Ed3P9cxHM7dFaSP1cNTVDRJPtv+0+8ylRMUQr139De/Q5V+7/+fRbe7jZ78l9rFqxgjftT6M5\n1B444Pa6rSmtvatUrZSqAzK11tvabR8JfK217unVCU88fzNwsb3HwdUxaUAxMEdrvdTJ/vHA+vXv\nvs/4MRmdCaeN6tpa4k8by9uLn+Vnsy7s+A3HmqChEYYNBDe/QIR7xcXFDBgwoHMnOVoPO3ZDtAWi\nIp0eUnfkCElTJnD3r2/g3t/ZSqEcrqsjNnMMz97/R2644irvrintb4gp7Q388MMPDBgwgKmTJ7O1\nYCv716xHWYz83dQJ8jPQIbPa+wQefOY7JVja1gf3uWHzJjIvvRhs/9ZvcHeskeGMPOCPSqlujg1K\nqe7AA/Z9XrPPs8hQSo21bxpk//4k+74FSqlJSqkBSqmzgPeBncAKI9czKq5PH7p36yZPaHRRS1f+\nl8N1dVyRfbxMSc8ePRiXPpLV62VyZahxDGVc+pOfUnPwAN//uDfAEQnR9RhJIuYC04C9Sqn/KqX+\nC+wBpgK3GIxjApAPrMe2iNdTwAbgj0ATMAb4ANuiXy8C64AztNZ+nZGjlCItOZm9ZfKERlf0xodL\nmDgmg8Ent/2raFpmJqs3yOTKUFNUVIRSip/OmQNAvpshDSGEMUbqRGwBhmBbzXOj/XU3MERrXWAk\nCK31Kq11hNY6st3rOq31Ua31+VrrZK11N631IK31b7XWAVnEItWaLAWnuqDq2lqWffE5V86ec8K+\naeMz2b13D6UVMqE2lBQWFnLSSScxYMAAkhMT2bDV0K8nIYQbXg0QKqUswPPAw1rrF30TUnBLsyZL\nt6ifxcbG+vwa/16RQ1NTEz93Mtdl2vgJAKze8A2Xnn+Bz2MJd2a1d1FREYMGDQJg3LB06YkIUv74\nfAvf8arIBXzpAAAgAElEQVQnwj58cImPYgkJtoJT0hPhT+5mMJvlzaUfkjVpCilJSSfs62+1ckpa\nmgxp+IlZ7V1YWMjgwYMBGDd8hPREBCl/fL6F7xiZE/E+cLHZgYSKVKuVkvIKqRsQhF599VXKDUx6\nLSkvZ+XaPK6cfZHLY6aNz+Srb2RyZSgpLCxs6YkYnz6CsqpKGZISwmRGnnf6DrhfKTUN20TIw613\naq2fMSOwYJWWnEJDYwNV1ftJSkgMdDjCrqysjGuvvZYLLriApUuX4k0x0/9bthRLlIWfnnu+y2Om\njZ/AWx8tlcW4QkR1dTXV1dWteiJsdT/ytxY47W0SQhhjpCfiV9hW8swEfg3Ma/Waa15owSnVagWQ\nxzyDTH5+PgDLli3j//7v/7x675tLl3DhmVnE9enj8pjpmRNkMa4Q4ih37UgiBqamEdu7N/nbZEhD\nCDN5lEQopVp+u2qtB7p5DfJdqMEhLTkFQB7zDDIbN24kNjaWSy65hJtvvpl9+/Z59L7vvt/Nui2b\nuSJ7ttvjRg4ZKotxhRBHjQjHcIZSinHpI8iXeRFCmMrTnohqpVQSgFLqM6VU2M6ESUpIIDIyUnoi\ngkx+fj5jx47l2WefpbGxkdtuu82j97259EN69exJdtZZbo+LiIiQxbhCSFFREXFxccTHH1/sd3z6\nSDYUSBIhhJk8TSIOAQn2r88EXBeS7+IiIyPpn2SVnoggk5+fz7hx40hOTmbhwoW8+uqrfPrpp27f\no7XmjQ8/4KfnnEf3bt3cHguyGFcoaf1khsO49BHs3ruHajdrOwghvONpEvEpsFIp5Vjs6j17j8QJ\nLx/FGVRSrVbpifCjhoYGt/sPHDjArl27GDduHADXXXcdWVlZ/PrXv6aurs7l+zZu28qO3UVtyly7\nM238BGoPHqTgu52eBy+81lF7e6J1jQiHcekjAFu7i+BhRnuLwPE0ibgaeBBwDAgXAJtcvLo8KX3t\nXx2tZLdpk+3HbuxY29IrSimef/55SkpKeOCBB1y+740PP6BffAJnTZnqURwTx2QQGRkp9SJ8rKP2\n9oSznohhAwfRvVs3mRcRZMxobxE4Hj3iqbU+AjwHoJSaANylta7xZWDBLNWaTMF33wU6DGG3ceNG\nYmJiSE9Pb9k2ZMgQHnzwQebPn8/ll19O5shRbd7T3NzMWx8t5eezLsBi8Wx0rvViXF6v6Cn8pqGh\ngT179pzQExEVFcWYYcPZsPXbAEUmRNdjZO2MrHBOIMDREyFVK4NFfn4+o0aNOiEZuO222xg9ejTX\nX389jY1t12r7av069paVejyU4SCLcQW/4uJimpubT+iJABg/chT5W2U4QwizGKkTEfZSrckcPHyI\nA4cOBjoUwfFJle1ZLBZeeuklNm/ezKJn2tZAe+PDJQxITWXKuPFeXUsW4wp+jsc7nSUR49JHsL2o\nkLojR/wdlhBdkiQRBqRZkwH4sUwmVwZaQ0MDBQUFTpMIgAkTJjB37lwe+NPD7PqhuOU97yxfxhUX\nXkREhHcfgdaLcYngVFhYiMViIS0t7YR940eOorm5mc07tgcgMiG6HkkiDEh1JBGyEFfAbd26lcbG\nxpZJlc489NBDJFut/OZPD6K15uPVX7K/pqbDAlPOyGJcwa+oqIhTTjmFyMjIE/aNGjqUqKgomVwp\nhEmMrJ0R9vrbS1/Lap6Bl5+fj1KKMWPGuDymZ8+ePP/ss5w3ezb/fO/ffLo2j5FDhjJ62HBD15w2\nPpPV66UnIli1XnirvZjoGEaeOoQNBTK5UggzeN0ToZQ6Xyk1vdX3v1dKbVRKvaGU6mtueMGpW0wM\niX3jpSciCOTn5zN06FB69erl9rhzzz6Ha7LncOuCR3n/04+5Mvsirxbpam3a+Ankb9sq4+pBqqio\nyOl8CIdxI0aSL7UihDCFkeGMJ4E+AEqp0cBTwDJgIPBn80ILbvKEhv+kpKS43OdqUqUzT912F1GR\nkdQdOeL1UxmtTRufybFjx2QxLh9x194d0Vp7kESMYMuOHSc8sSMCozPtLQLPSBIxEHCk8ZcAS7XW\n9wC/B2aZFViwS7UmS0+En0RHRzvd3tzczMaNG93Oh2gtsW9f3nhyEff//mYGnnSS4XhGDhlKn16y\nGJevuGpvT5SXl3P48GGXwxkA40eMoqGxga27pNZLMOhMe4vAM5JENAA97F+fDXxs/3o/9h6KcCA9\nEYFXVFTEoUOHPO6JADhn6nT+eMu8Tl03MjKSKePGyWJcQaj9EuDOZAxPRynFBplcKUSnGUkivgL+\nrJS6D5gIfGTfPhTYa1Zgwc62foYkEYGUn58P4FUSYZZp42UxLl94/fXXOf/88w2/v/0S4M707tWL\nIaecIk9oCGECI0nEjcAx4FLgt1rrH+3bZwHLzQos2KUlp1Cxbx/1DfWBDiVs5efnk5qaSr9+/fx+\n7WnjJ1Bz4IB0iZvsn//8JytWrKC4uNjQ+4uKirBarfTs2dPtceNkWXAhTGGk7PUPWutsrXWG1vof\nrbbP01rfbG54wSvV/phnaUVlgCMJX95MqjTbpIyxshiXyQ4dOsQXX3wBwMqVKzs42jlnC285M37k\nSDbt2CY9SUJ0kpFHPJuUUklOticopZrMCSv4pSXbZhTLap6Bk5+f7/GkSrP17NGDsekjpF6EiVau\nXElDQwNJSUl89tlnhs7hrkZEa+NGjOTQ4cPsKv7e0HWEEDZGhjNcPVwfg23SZVhIS3ZUrZTS14FQ\nVlZGeXl5wHoiwF50SnoiTLN8+XIGDRrEVVddxcqVK9Fae32Ojh7vdBiXPhJAhjSE6CSPkwil1M1K\nqZsBDVzv+N7+mgf8FQibgvR9evWmV8+e0hPhBzU1Jy4aG8hJlQ7TxmdStOcHyiplSKuztNbk5OQw\na9YsZs+ezd69e9m1a5dX5zh8+DBlZWUeJRGJ8fGclNKf/G2SRASas8+3CB3elL12PBengBuA1kMX\nDcD39u1hI82aLD0RflBbW0tcXFybbfn5+cTGxnLKKacEJijaLsZ1yXlhUyLFJ3bu3Mnu3buZNWsW\nJ598MpGRkaxcuZIhQ4Z4fA7H452eDGeAreiUlL8OPGefbxE6PO6J0FoP1FoPBFYBGY7v7a9hWuvz\ntNZrfRdq8Em1JrO3XHoiAsExH8Jo6WozpCYnMyA1VepFmCAnJ4fo6GjOPPNMoqKimDBhgtfzIjyp\nEdHa+BGjyN+61dCwiRDCxsjTGVla62rH90qpSKXU2HBZN6O1tGTpiQiUQD6Z0dq08ROkcqUJli9f\nzowZM1oezczKyvJ6XkRhYSE9evTAan9yqiPjRoxgX001e0pLDMUshDD2dMbTSqlf2b+OBL4ANgB7\nlFJnmhtecEu1WmVORAAcOHCAwsLCoEgipmdOYMPWAlmMqxPq6ur4/PPPmTXr+JDQzJkzqaioYOtW\nzxfKKioqYtCgQR73To0fOQpAik4J0QlGns74GeBYeWg2cAowHFgEPGJOWKEhLTmFkooKedbczzZt\nsv34BUMS4ViMa90WWYzLqM8//5z6+vo2ScS0adOwWCxeDWl4WiPCIdWaTGLfeHlCQ4hO8GZipUMC\n4Kj3fAHwjtZ6p1LqZeAW0yILAalWK8eOHaNi3z6SA1A1MVzl5+cTExPD8OHDAx1Ky2Jci155mY3b\nthETHU23mBjbf6MsxKgIupV+T0zv3nTr1o2EhISATgYNRjk5OQwYMIBhw4a1bOvRoweTJ09m5cqV\n3HTTTR6dp7CwkOzsbI+vq5Ri/MiR8oSGEJ1gJIkoB0YopUqB84Hf2rf3oO0TG11e64JTkkT4T35+\nPqNGjcJisQQ6FCIjI7n6ojm8tWwpn+R+xdH6+g57prZs2cKoUaP8FGHwW758ObNmzTphGGLmzJk8\n88wzNDc3ExHhvtO0qamJ77//3queCLDVi3j9ww+8jlkIYWNkOOMV4G3gW2w1Iz61b59EGNWJgOOl\nr2UhLt9qnyxs3LgxKIYyHP764MPs+zqfw5u20rS9kMat33FoYwFVuevYu+JzCrdupaCggG+++Ybe\nvXvzwQfyj5bDrl272LVrV5uhDEd7Z2VlUV1d3TJ85c7evXtpbGz0OokYP3Ike8tKqdy/z7vAhWmC\n4Y8BYZyRpzMeBK4HXgCmaa0dK1A1AY+bF1rw6xefgMViMbwk+Pr16xk0aBC1tbUmR9a19O/fv+Xr\nhoYGCgoKgiqJaC8qKoqePXqQENeXVKuVQQMHMWLECDIzMzn33HNZunRpoEMMGjk5OVgsFrKyslq2\nOdp78uTJdOvWzaN5Ed7WiHAYN8JWuVImVwZO68+3CD1GeiLQWr+rtV6ktd7baturWuuw+hMrIiKC\n/klJhh/z/Oijj9i9ezcbNmwwObKuq6CggMbGxqBOItzJzs5m7dq1VFRUBDqUoLB8+XJOP/10evfu\nfcK+mJgYpk+f7lESUVhYSEREhNfzTQafPIDePXvJ5EohDDKURCilZiilPlRK7bK/liilTjc7uFCQ\nZk0x/JjnmjVrAFv3vPBMfn4+SilGjx4d6FAMcXTb5+TkBDiSwDt69CgrV65sM5TRXlZWFl988QWN\njY1uz1VYWMhJJ51EdHS0VzFEREQwNj1deiKEMMhInYirsc2DqAOesb+OAP9VSl1pbnjBL9VqNdQT\n0dzc3JJEeDLmK2zy8/MZOnQovXr1CnQohlitViZOnChDGsCqVas4cuQI559/vstjZs6cyaFDh1jf\nQVVQR40II8aNGMkGSSKEMMRIT8R84E6t9WVa62fsr8uAu4H7zA0v+KUlGyt9vXPnTqqrqxk0aFDY\n9UTU1tYybNgwVq1a5fV7g21SpRHZ2dmsWLGChoawWfTWqZycHNLS0hg5cqTLYzIzM+nVqxcrV650\ney5va0S0Nn7EKHYVf8+BQwcNvV+IcGYkiRgEfOhk+xJgYOfCCT2p9kW4vK2/v2bNGpRSXH/99Wzd\nujWs/kHJzc1l586d3HbbbV4V6mpubu4yScTBgwf58ssvAx1KQLl6tLM1i8XCGWec0eG8iMLCwk70\nRIwAYOM2z6tjCiFsjCQRe4CznGw/274vrKQlJ3O4ro7ag979FZOXl8fIkSM544wzaGxsZNu2bT6K\nMPjk5uYSExPD+vXreffddz1+X2FhIYcOHQr5JCIjI4O0tLSwHtLYvXs3O3bscDsfwmHmzJmsXr2a\n+vp6p/urq6upqakx3BORPvhUYqKjyfeixLYQwsZIEvEU8IxS6u9KqV/YX88BTwMLjQShlDrdPjnz\nR6VUs1LqIifHPKSUKlFK1SmlPlFKnWrkWmZLtSYD3teKyMvLY/LkyYwZMwYIr3kReXl5nHfeeVxw\nwQXMnz+/w0lzDvn5+QCMHTvWl+H5nFKK7OxsPvzww7BdQTInJ4eoqCjOOsvZ3yNtZWVlceTIEdau\ndb5IcGFhIeD56p3tWSwWRg8dLsuCC2GAkToRfwcuB0ZjSxyeBkYBl2mtnzcYR09gI/A7bAWs2lBK\n3QXcCPwamAgcBlYopbybiu0Dacm2JMKbJzQOHjzIt99+y5QpU+jduzeDBw8Om3kRx44dY+3atUyd\nOpXHHnuMwsJCXn75ZbfvKSmxrbKYn59Pamoq/bpAddDs7GwKCwvZuXNnoEMJiOXLlzNt2jT69Olz\nwj5HeztkZGTQt29fl0MaRmtEtCblrwOnfXuL0GK0TsR7WuvpWusE+2t6Z2pEaK2Xa63vt5/D2QDp\nLcDDWuulWutvgWuA/sDFRq9plpR+SQBePaHx9ddfo7Vm8uTJgO2XZLgkEd9++y2HDh1i6tSpjBkz\nhiuvvJI//vGP1NXVuXyPo6eiK8yHcJg5cybdu3fnww+dTS/q2urr6/nss89cDmW075mKjIxkxowZ\nLidXFhYW0rdvX/r27Ws4pnEjRrJ11y6OuhgyEb7jaU+kCE6GkggApdSEVsMZmWYG1e46A4Fk4L+O\nbVrrA8BaYIqvruup6OhorImJXlWtzMvLIy4urmUBqbFjx7Jp06aw6NrOy8sjKiqKCRMmAPDwww9T\nVVXF4sWLO3xvfn5+l0kiunfvzllnnRWW8yK+/PJLDh8+7PbRzvZmzpxJXl6e02SzM09mOIwbMYKm\npia27Airyv1CdJqROhFpSqkvga+BxfbXOqXUV0qpNLMDxJZAaGwLf7VWbt8XcGnJKV7NiVizZg2T\nJk1qWVRo7Nix7N+/n71793bwztCXm5vLuHHj6N69OwADBw7khhtu4IknnmD//v0u31daWkp5eXnI\nz4doLTs7m6+++orq6upAh+JXOTk59O/fv2U+kCdmzpxJY2Mjubm5J+zrTI0IhzHD0omMjOSLdV93\n6jxChBsjq3i+BFiAdK31DgCl1DBsC3O9hG1lz4DLyMjg1qcXYolqu7jL7AsuYM6FF2Ihgv6WGLfn\nKGmspxHXjyDGRkQRF2kh1Wp12hPRoJspjWiCkhKIPJ6vzZ49m4EDB1JcXExKSgoZGRmAbXLlSSed\n1OYcNTU1btfWsFgsHdaeLykpcdtlGBsbS1xcnMv9DQ0NlJa6n/ORkpLitlqg4z6ysrK4/PLLKS4u\nbtl34403Eh8fz+OPP86CBQucvj8/P5/58+eTnp7e5r1e3Qea0qZ60K4fKUyJiiFauc6ta5oaqW0+\n5nK/Rz9X9vaYMWMGixYtYtu2baSmpnp+Hya2hyu+/Llavnw5559/Po2NjU7vo66urqWNHfcxYsQI\nkpKS+Oyzzzj77LPb3MdVV11Famqq058Li8VC//gE9/fRWE9jpObtN96kpKKcz3d/x8C0438POT7n\nrjToZkqPuRgGadYQoUlpbCS6m+ufi672OXfFr/fR1AwRTbb/tvvMm/I5V+7/+fRbe9i/3l9TQ0Vt\nDcNb9cp5ch+rVqzgzaVL2myvPXDA7XVbU952oSuljgBTtdb57bZnAl9qrXt4dcITz98MXKy1XmL/\nfiBQCIzVWm9uddznQL7Wep6Tc4wH1q9/933Gj8noTDge+f2D97F6w3o2LlnWdsexJmhohGEDwf4L\nZOfOnQwbNozly5dz3nnnAaC1JiEhgVtvvZV7773X5/EGSnl5OcnJybz11ltcdtllbfY98MADLFiw\ngO+++460tLYdWsXFxbz22mssXLiQ/fv3u60r4NLRetixG6ItEBXZmdvwnJP2b2/cuHGMHDmS1157\nzT8xBdgPP/zAgAEDeOedd7j00kudHlNcXMyAAQNO2O5IPvPy8lq21dfX0717d1544QWuv/565xf1\nsO2PHTvGHQse4+l/vsyNV1/DonvuIyrKyN9ZrU/a8c9AuHPV3p3m6898sLSt/T5/9/jDvLNiOT+s\nWk33bt06dcoNmzeReenFAJlaa7eLOxmtE+EsLY8ETJ9mq7XeDZTRqjaFUqoPtqXHT+zbDIBUa7LH\ncyIcpa4nTZrUsk0pRUZGRpd/zNPxy3/q1Kkn7Lvtttvo1asXDz74oNP3bty4kbFjxxpLIIJYdnY2\nOTk5HDvm+q+FriQnJ4fIyMg2vQmeysrKYt26dRxo9VdScXExWutOz4kA2+qri+65j+ceeoS/v/k6\n2b/5FbUHPf+LTIhA2bCtgOf+703u/d2NnU4gvGUkibgD+ItSaoJjg/3rxcDtRoJQSvVUSmUopRwD\n3oPs3zv69p8G7lVKzVZKjQb+BewFgmLV0LTkZPbVVHs0szsvL4/09PQTurHGjh3b5Z/QyM3NJS0t\n7YQhG4A+ffpw77338sorr7B9+4mT27rSpMrWsrOz2b9/f0ty2dUtX76cKVOmuO3GdWXmzJk0NTW1\nqfTZ2RoRzvzm8itZ/tI/WbtpI1N+fglFP/xg2rmFMFtzczM3PvYnRgw+ld9debXfr28kifgnMBZY\nq5SqV0rVY3tSYjzwslJqv+PlxTknAPnAemyTKJ8CNgB/BNBaLwD+Ajxvv1Z3YJbWOihqRXtTcCov\nL48pU058qCQjI4Ndu3Zx0MvKl6EkLy/PaS+Eww033MBJJ53E/Pnz22y3WCwUFhZ2qUmVDqeddhpJ\nSUlh8ZRGQ0MDn376aYdVKmNjY51uP/XUU0lLS2vzqGdRUREWi6XNnBIznD1tOmve/g+Nx44x8dKL\n+VImXPqMq/YWnnntzTfI27yRv8y/H4vF9dwdXzGSRMzFVvTpOvt/W389r93LI1rrVVrrCK11ZLvX\nda2OeVBr3V9r3UNrfZ7WepeB2H3CUXCqoyTi0KFDbNmyxWkS4fgHcsuWLeYHGAQaGhpYt26d03t3\niImJ4aGHHuI///lPm+qEu3bZmror9kRERERw4YUXhkUSsXr1ag4dOtTho52ueimUUmRlZbUpOlVY\nWMjAgQOJjDR/zHvYoMGsefs/jB42jLOuvZpX//Nv068hXLe36FhtbS13zp/PZefNImtSYCoeGKlY\n+aqnL18EHIwcPREdzYtYt24dzc3NLUWmWhsxYgQWi6XLDmnk5+dTX1/vticC4KqrrmLUqFHcfffd\nLXUz8vPziYmJaamr0dVkZ2dTUFDA7t27Ax2KT+Xk5GC1WjvVozRz5kw2btzY8jhwZxbe8kRC376s\n+Mer/L+Lf8q1d9/OHxYu8GrROCF86aGHHuLgwYMsvPXOgMVguNiUOK5Xz57E9u7dYU/EmjVr6NOn\nDyPsqwa2Fh0dTXp6epedXJmXl0e3bt06/AckMjKSRx99lM8//5yPP/4YsE2qHD16dEC66vzhnHPO\nwWKx8NFHHwU6FJ9yPNrpqI9iRFZWFlrrlmXki4qKTJ0P4Ux0dDQv/Okxnrp7Pk+8+ByX3vQ7Drup\nsCqEPxQUFLB48WLuu/sPpFkDVzJJkgiTePKERl5eHhMnTnT5S7QrT67Mzc1lwoQJbp8xd8jOzmba\ntGncfffdNDc3k5+f3yXnQzj07t2bM888s0sPaezdu5ctW7Z4VaXSmQEDBjBo0CA+++wztNZ+SSLA\nNpRy63XX88HfX+Dj1V/y2we67qPYIvhprbn55psZNGgQ826+OaCxSBJhkrTkZLc9EVprl5MqHTIy\nMtiyZQtNTU2+CDFgtNasXr26w6EMB6UUjz/+OBs3buR///d/KSgo6JLzIVrLzs5m5cqVXXZi7fLl\ny4mIiODcc8/t9LlmzpzJypUrKS8vp66uzqfDGe3Nnnk28669jpwvVoVFmfpQo7Vm0aJFXX5o8N13\n3+Wzzz5j8eLFxMQEtv6IR0mEUmqMUm7Ke4kOeyKKioqoqqpym0SMHTuWI0eO8N133/kixIDZs2cP\nJSUlHicRANOnTyc7O5ubbrqJY8eOdfkk4sILL2x5eqErWr58OZMmTSI+Pr7T58rKyqKgoKCl7og/\neiJaO+O0iVRV72dbYdDM7RZ2y5Yt49Zbb+Wiiy7i8OHDgQ7HJw4fPsxtt93GRRdd1OGTTv7gaWKQ\nDyQCKKWKlFLu68iGIVtPhOuVPB2/8FoXmWrPUf66qw1pOO7dXQLlzKOPPsqhQ4dQSnm1zkIoGjx4\nMOnp6V1ySOPo0aN88sknpv3Cy8rKAuCll14COrcEuBFTx2USFRUl62wEoQULFjB8+HB2797NDTfd\n2CV7ix577DEqKipYtGhRoEMBPE8iaoCB9q9P8eJ9YSPVmkxpZYXLyoN5eXkMGzbM7V9iCQkJpKWl\ndbnJlbm5uQwePJikpCSv3jd69Gh++ctfctZZZ9GzZ08fRRc8srOz+eijj7rc7P/XXnuNgwcPnlDq\n3JWGBvflX1JSUkhPT2f58uUkJyfTo0enKu17rWePHmSOHCVJhEk6am9PrVmzhi+++IJHHnmEF198\nkdfefJPn3nnLlHMHi127dvHkk09y5513+j15dsXTZODfwCql1G5sxaC+sfdInPDyXajBLc2aTFNT\nE+VVVU73r1mzxqO/xLvi5Mrc3FyvhjJae+6553juuedMjig4ZWdnU15ezvr16wMdimmam5t56qmn\nmDNnDkOHDvXoPR0tOgS23ojm5ma/D2U4nHHaRFZ9vbZL/qXrb560tycWLFjA0KFDmTNnDldccQU3\n3vBbblnwGF9v7jp/lM2dO5fk5GTuvvvuQIfSwqMkQmv9a+BibJUkFfAix5cBb/8KS+6qVh4+fJhN\nmzY5rQ/RXldbQ6Ouro6NGzd6PZThYLFYOr8IUoiYOnUqffv27VJDGsuWLWP79u3cfruhivguzZw5\nE/D/UIbDjNMmUVJRTtEeKYkdDHbs2MH777/PHXfc0VJ47KknnmB8ejo/m3cTVfu9KaAcnJYuXcpH\nH33EokWL/N775o7HwxJa6+Va62eBV4HFWmunL9+FGtwcVSudTa78ZsN6mpqaPO6JKC0tpaKiwvQY\nA+Gbb77h2LFjhnsiwklUVBSzZs3qUknEwoULmTx5suntP2PGDMD/kyodpmVOQCklQxpBYuHChVit\nVq6++vjaEdHR0bzz5NPUHT3CVbfPDemn3o4ePcrcuXM555xz+MlPfhLocNowUrHyl1rrgwBKqTSl\nVFpH7wkHCX37EhMd7bQnYs3ar+nVqxcjR47s8DyOyZVdpTciNzeXXr16MWrUqECHEhKys7PZsGED\nP/74Y6BD6bR169axatUqbr/9dtNXX01MTOSVV17h2muvNfW8norr04eM4ems+nptxwcLnyotLeVf\n//oXc+fOpVu7FSxPSk7hjScX8cnqr3j4r38JUISd99RTT1FcXMwzzzwTdCsZe51EKKUilFL3K6Vq\ngWKgWClVo5S6L5wfA1VK2R7zdJJE5K1dy8SJEz2q7z948GB69uzZZeZF5OXlMXnyZJ+sbdAVnXfe\neURGRrJs2bJAh9JpTz31FIMGDeLiiy/2yfmvvfZaBgwY4JNze+KM0yZKT0QQcNRK+M1vfuN0/zlT\np/PQLfN46K/PkLPqc/8GZ4IffviBRx55hLlz5wZl6X8j/+g/AtwI3A2Ms7/uAW4CHjYvtNCTarWe\n0BOhtSbv67UezwmIiIggIyOjSyQRWmtyc3MNz4cIR/Hx8UybNi3khzS+//573nnnHW699dYum0DO\nOHQdnngAACAASURBVG0Su/fuYU9pSaBDCVu1tbX8/e9/54YbbnC7kNc9N/yeWWecydV3zOP7vXv9\nGGHn3X777cTFxXHfffcFOhSnjCQR/w+4Xmv9d631Zvvrb8D/ANeaGl2ISUtOOWFOxPclP1JRUeHR\npEqHrjK5cteuXVRVVcl8CC9lZ2fz6aefcuTIkUCHYtjixYuJi4sL2HCDP5x+2mkA0hsRQC+88AJH\njhzhlltucXtcREQE//vkn+nTqxc/u/n31DfU+ynCztm+fTvvvPMOjz76KH369Al0OE4ZSSLige1O\ntm+37wtbtp6ItgWn8jbZehS8SSLGjh3L9u3bOXr0qKnx+ZujyJQ39y5sSURdXR1//etfAx2KIdXV\n1bz44ov87ne/69L1PfrFJ5A++FRJIgKkvr6eRYsW8Ytf/ILU1NQOj4+Pi+PdZ/7G5h3bmftIaHSa\n/+Mf/yAhIYErrrgi0KG4ZCSJ2IRtOKO9G+37wpatJ6K0zbPjeZs3MuTUU0lMTPT4PBkZGTQ1NVFQ\nUOCLMP0mNzeXESNGuO1m9ERKSopJEYWG4cOHc9NNN3HHHXdw/fXXh1wy+cILL9DY2MiNNzr7NdGx\nUGrvGRMnSRLRSUbb+/XXX6e0tNSrx4czR43m2fsf5Lk3X+df7/3b0HX9paGhgVdffZVrrrkm4Otj\nuGMkibgTuE4ptVUp9Q/7ayu2oYw7TI0uxKQlJ3O0vp7q2tqWbWs2b2LyxIlenWf06NFEREQYmhex\nb9++oEk+OlNkqjVPVv7sSpRSPPPMM7zyyiu8/vrrTJ8+neLi4kCH5ZGGhgYWL17ML37xC6xWq6Fz\nhFJ7n3HaRLYXFVKxz3mROdExI+3d3NzMggULmDNnDunp6V699/qfX861P72UGx64l83bt3l9bX9Z\nsmQJlZWV/OpXvwp0KG4ZecRzFTAUeA+Is7/+AwzTWn9pbnihxVFwam+ZrQLbkaNH2bhzO1Mmeded\n36NHD4YMGeL1vAitNZdccglTp05lf4CLqxw4cIBvv/1W5kN0wrXXXktubi779u0jMzOTTz75JNAh\ndejNN9+ktLSUW2+9NdCh+MUZE2x/IEhvhH99+OGH7NixgzvvvNPr9yql+OsDDzH0lIFcedvcoK06\n+tJLLzFlyhSPSgMEkqFHMrXWJVrr+VrrS+yve7XWYT9F2VFwyjEv4ptvt3Ds2DGmuFl0yxUj5a8/\n/fRTVq1axaFDh3jqqae8vqaZ1q61lQSWJzM6Z9y4cXzzzTdMmDCB888/n8ceeyxof+lprVm4cCEX\nXnghI0aMCHQ4fpGanMzgkwdIEuFHWmueeOIJpk+fbviPlB7du/P47XdR8N1Ovt25w+QIO6+4uJiP\nP/6Y66+/PtChdChs6zr4QnJiPyIiIlp6ItZs2kjP7j0YZSCTHDt2LJs2bfL4HwytNfPnz2fy5Mnc\ncccdLF68mMrKSq+va5bc3Fzi4+M9Xi9BuJaQkMBHH33E/Pnzueeee/jpT39Kbashs2Dx8ccf8+23\n35pe4jrYSb0I/1q9ejV5eXncddddnTpP1uTJ9O7Zi/c//dikyMzzyiuv0LNnT37+858HOpQOSRJh\noqioKJIT+7X0RORtyue0kaMMrf2QkZHBgQMH+P777z06fsmSJaxbt45HHnmEO+64g4iICJ544gmv\nr2uWvLw8pkyZQkSE/IiZITIykoceeoglS5awcuVKJk6cGDRzXxwWLlxIZmZmS0nqcHHGaRPZvGN7\nm7lQwneeeOIJRowYwQUXXNCp88REx3DhmVm890lwJRFNTU28/PLLXHHFFfTq1SvQ4XRIfsObLNVq\nbXlCI29jPpPHZBg6z9ixYwE8GtJobm7m3nvvZebMmcycOZOEhATmzZvHX//6V9NWyPNGc3NzSxIh\nzDV79mzWrVtHdHQ0kyZN4u233w50SIDt5/TTTz/1SYnrYDfjtElorflq/bpAh9LlFRQUsHTpUu68\n805T/kC5+Oxzyd9aQPGPwVOA6pNPPmHPnj0hMZQBkkSYLi05hR/Ly/mh5EfKqiqZMmasofMkJyfT\nr18/jyZXvvXWW3z77bc88sgjLdvmzZtHt27deOyxxwxdvzO2bt3KgQMHZFKljwwZMoQ1a9Zw0UUX\ncdlll3HLLbdw+PDhgMb01FNPcfLJJ3PppZcGNI5AOCUtjbTkFBnS8IMnn3yStLQ00+omzJoxA4vF\nwgf/DZ5Jyy+99BKjR4/mNHsxs2DXqSRCKZWolLpQKXWRUip0Hu72oVSrlb3lZeTl5wMY7olQSnk0\nubKxsZEHHniA2bNntynqFBcXx+23387zzz/Pnj17DMVgVF5eHpGRkaZ9CGpqakw5T1fSs2dPXn/9\ndRYvXswLL7xAeno67733XkAmXe7du5e33nqLefPmmbJse6i1t1KKM06bKItxGeRpe+/du5fXX3+d\nefPmmfYYcJ9evf9/e/cdH1WVNnD896TTDCBIghRBMSwQEkooKk3KSntFQETYBYyKdEGkCEgkomQB\nF16kLiBFgRUFRFG6CiJF6eVlE1kFFoMCAoFIICE57x8T2ICpk7lTkuf7+cxHk3vnnOfyZGaeuffc\nc2jZ6BE+2eIeRcS5c+dYu3YtL7zwgsec0bO7iBCRLsAJIAqYAPxbRJ5zVGCeynYm4hd2HzpA1YoV\nua/0vXa3lZvpr5csWcKJEyd4880/zsA2ZMgQSpQowcSJE+2OwR47d+4kLCzMYdfz3HEQoTsQEYYM\nGcKxY8cIDQ2lc+fOdOjQgR9//NGpccyYMYNixYo57H52T8x304gG7P+/Y1xNTHR1KB4nt/meNm0a\nxYsX58UXX3Ro/51at2H799/x26VLDm3XHkuXLsXb2/uOJc3dXa6LCBG5+xMhCmhgjGlgjKkDPI1t\nca5C7f5y5biUkMDWXTtpHFYnX22Fh4dz8uTJLCv169evEx0dzTPPPHN7CfGMSpQowahRo3jvvfec\n+sGii245V9WqVVm3bh1r1qzhyJEj1KhRg+joaKfMdHnlyhXmzZtHv379KFGihOX9uatmEQ1JTU1l\n18H9rg6lQDp8+DCzZs1i0KBBDv87e7Jla9LS0lj31ZcObTevjDEsWLCAzp07U7q056wgkZczEftE\n5MkMP98E7svwczkg2SFRebAKQbarOkfjYmkcnv8iAsjybMS8efP4+eefmTBhQpZtDBw4kHvvvTfT\nMxVWuHDhAnFxcToewslEhE6dOnH8+HGGDRvGm2++SWhoKBs3brS03wULFpCUlMTgwYMt7cfdhVSt\nStnS9+olDQskJibSrVs3qlevztixYx3eflDZsjQKr+PyWz2//fZbYmNjPWZA5S15KSL+DPQVkTUi\nUh54GfhQRH4RkQtADDDAiiA9yf0ZpvptlM8zESEhIfj7+2daRPz++++8/fbb9O7dm5CQkCzbKFq0\nKGPGjGHp0qXExcXlK57c2L17N4AWES5SrFgxJk2axKFDh6hQoQJPPPEETz/9NGcsWP44OTmZ6dOn\n8+yzz+ZqAaSCzDYuIsLuwZWbN28mPr7Qz9eXqUGDBnHmzBk+/PBDAgICLOmjU6vWbNyxnWsuXDl3\nwYIFVK1alebNm7ssBnvkuogwxpw0xrQHVgLbgHDgIaA10AqoZIz5wpIoPcitqa+LBARQ++GsP9xz\nw8fHh1q1amU6uHLGjBlcunSJqKioHNvp27cv5cuX54033shXPLmxc+dOgoKCqFy5suV9qazVqFGD\nL7/8kmXLlvHNN99QvXp1pk6dSkpKikPaj4uL47HHHsvzAkgFWbOIhnx3+DBJebyMtGfPHtq0aUNY\nWBgbNmywKDrP9P7777NkyRJmz56d7Zel/OrUqg1J16+z+VvXrNyQkJDAypUref755z1ubh171s5Y\nAUQAYcDXgJcx5qAxxrOWGrRI0SJFKBUYSP1aofj6+ua7vcwGV16+fJnJkyfz0ksv5erDOiAggLFj\nx96+FdRKu3bt4pFHHvGYkcUFmYjQo0cPYmNjiYyMZNSoUdSpU4dvvrH/jdIYw5w5cwgPD+fy5cvs\n2LGD0NBQB0btuZpGNCA5JZk9h3I/XX1aWhovv/wytWvXJiIigrZt2zJu3Dhu3rxpYaSeITY2lv79\n+9O7d2969eplaV8PV6nKnx58yGV3aaxYsYIbN27Qp08fl/SfH3kqIkSknYgMB+obY17AtqLnMhGZ\nIiJFLInQAz1atx7/07KVQ9oKDw/n6NGjd3yDfOedd7hx40aerg9GRkZSuXJlS89GpKSk8N133+ml\nDDcTGBjIjBkz2Lt3LyVKlKBp06b07t2bc+fO5amds2fP0r59ewYMGEDv3r05cOAADe1YF6agqvVw\nCCXvuSdPlzSWL1/Onj17mDFjBuvWrePtt99m0qRJtGrVyiUTxbmL69ev061bNypUqMDMmTOd0udT\nrdvw2ZdbXVLALViwgPbt21O+fHmn951febk74x1gEbazEPNE5PX0FT3rAteBAyLS1powPctn8xby\n6vN9HdJWeHg4ycnJxMbaFok5d+4c06ZNY/DgwQSlL/iVG35+fowfP55Vq1ZxIH0OC0c6f/48kydP\n5tq1aw6/M8MRZ3SUbTGvb7/9lvnz57Nu3TpCQkKYM2cOqampOT539erVhIaGsn//fj7//HPmzJlD\nsWLFLInTU/Pt7e1Nk/q5HxeRmJjIqFGj6Nq1K82aNcPLy4vXXnuNr776iri4OMLDw9m6davFUbte\nZvkePnw4sbGxrFy50mlTP3dq1YbfLl9ix769TunvlgMHDrBv3z6PG1B5S17ORPQB2hljumMrJP4K\nYIxJNsa8DnQGxjg8wkKudu3awH+nv46JicHb29uuJXD/+te/Uq1aNcaPH++Q2JKSkli5ciUdO3a8\nPeaiR48eDp9pzROrc3fl5eXFCy+8QGxsLF27dmXAgAE0atSI77/PfMrmhIQE+vTpQ5cuXWjatClH\njhzJ95oFOfHkfDeNaMDOA/tITs75RrWYmBh+++03pkyZcmcbTZty8OBBateuTevWrZkwYUKuCj1P\ndXe+V61axezZs5k2bdrt9z9nqFcrlPvLBTn9Lo2FCxcSHBxs+evKKnkpIn4HqqT/f0VsZx9uM8b8\nnzGmiaMCUzaBgYFUqVKFgwcPcubMGWbPns3w4cO59968T2Ll4+NDVFQU69atY88e+25FS0tL4+uv\nv+b5558nKCiIZ555hgsXLjB9+nTOnj3LsmXLPPabZGFSpkwZ5s+fz86dO0lJSaFhw4YMGDCASxkm\n3Nm+fTthYWGsXr2aRYsWsWrVKsqWLevCqN1f0/oNSLp+nX3Hsh97dPLkSaZOncqIESN44IEH/rD9\nvvvuY8OGDbzxxhtMmDCBJ554gl/TF/YryE6ePMnzzz9Ply5d6Nevn1P79vLy4smWrfhkyyanzfya\nlJTEBx98QJ8+fRwy26sr5KWIeA1YKiLx2O7OeN2akNTdbg2unDhxIsWLF2fo0KF2t9W9e3dq1KiR\n57MRx48fZ8yYMVSpUoUWLVrw9ddfM3ToUOLi4ti1axcDBw6kTJkydselXKNx48bs3buX6dOn88EH\nHxASEsKiRYsYNWoUzZs3p1KlShw6dIg+ffroYNlcqFuzFsWKFs3xksaIESMoU6YMo0ePznIfb29v\nxo8fz+bNmzl8+DB16tRh27Ztjg7ZbaSkpNC9e3dKlSrFggULXPL31ql1G079/DOHjh93Sn+rVq0i\nISGByMhIp/Rnhbzc4rkM2xmIJ4EHjDFrLYtK3SE8PJzdu3ezcOFCRo8ezT333GN3W97e3rzxxhts\n2rSJHTt2ZLpPUlISu3fvZubMmTz33HPUrFmTGjVqMHfuXNq1a8eOHTs4ceIEEyZMoFq1anbHotyD\nj48PQ4YMITY2llatWhEZGcm0adOIiYnhq6++okqVKjk3ogDbv+WjdetlW0Rs27aNjz/+mJiYmFyN\nK2nZsiUHDx4kJCSExx9/nKlTpzoyZLcxduxY9u3bxz//+U9KlizpkhiaN2hEYIkSrNls7SRttyxY\nsIAWLVrw0EMPOaU/K+Tp/Ikx5jfgN4tiUVkICwsjMTGR4OBgBg4cmO/2unTpQlhYGOPGjWPjxo0c\nPnyYvXv3sm/fPvbu3cvRo0dJTU3F19eX2rVr06RJEyZOnEi7du3w9/d3wBEpdxQcHMzy5csZNGgQ\ngYGB1KxZ09UheaSmEQ2YPP8fpKam4n3XttTUVF5++WUaNWpEjx49ct1mcHAwmzdvZvTo0YwYMYLW\nrVtnOtW9p1q/fj1Tpkxh8uTJLr3jx9fXlw4tHueTLZuY8PIwS/uKi4tj27ZtLFu2zNJ+rOaZF2EK\nmXr16iEivP766xQpkv87ab28vIiOjubJJ5+kePHi3Lx58/bEVhEREfTv35/69etTq1YtLRoKIb1F\nN3+a1m/AuGnvcOhfx6kb8qc7ti1cuJBDhw6xZ8+ePE8q5OPjw6RJk1izZg0TJ07ko48+cmTYLhMf\nH0+vXr1o27Ytw4cPd3U4dGrVhmWfruXH06epWqmSZf289957lCpVis6dO1vWhzNoEeEBKlasyPHj\nx3n44Ycd1mbHjh2ZPHkyRYsWpX79+tSuXdshBYpShV2DsDD8/fzY/v13dxQRly9fZuzYsfTq1YsG\nDRrY1bavry+vvfYaL774IseOHfOos0VpaWmkpaWRmppKamoqaWlp3Lx5k549e+Ln58eSJUvcYrbG\nPz/WFH8/P9Zu3cyw5xyzMu3dUlJSWLx4MX/5y18sm8rbWVyfMZUrISEhDh1oJCKMGDGCgQMH0rBh\nQy0glHIQfz9/GoXX+cNiXNHR0SQlJTFp0qR8td+rVy8qVarEW2+556LJiYmJ1K9fn4CAAPz8/PD2\n9kZE8Pb2xtfXl4CAAIoVK0aJEiUoVaoU27dvZ9myZW5z50+J4sVp9chjlt3qee3aNWbOnMmvv/7q\nsXNDZOQRZyJEJArb0uMZ/csYU8MV8Sjnio+P9+i5A1TeFIR8N41owOxlH5CWloYXEBsXx7vvvkt0\ndHS+j83Pz4/Ro0czcOBAoqKiLF1Twh7R0dEcO3aMmJgY/P398fLywtvbGy8vrzv+/9Z/Q0JC3G58\nx1Ot29D39TGcv/gbZUvn/Xb6jIwxxMbGsmHDBtavX8+2bdu4ceMGHTp0cOo8GFbxiCIi3VGgJXDr\n67hOLl9IOGrRKOUZCkK+m0U05M1Z73L83yeoWbkKr4waScWKFRk2zDGD9SIjI3nrrbd4++23WbJk\niUPadIRjx44xbdo0oqKicn0r+qlTpyyOKu86Pt4SM87w2ZdbiezaLc/PT0xM5Msvv7xdOJw8eRJ/\nf3+aNWvGpEmTaNu2rdsVf/bypCLipjHmvKuDUEqpnDQKr4OPjw/b9n7HqdOn+WLDBlatWuWw69/+\n/v6MHDmSV155hfHjx/Pggw86pN38MMYwcOBAqlSpwogRI1wdTr7cd28ZHq1bj0+2bMp1EWGM4f33\n32fp0qV88803JCcn8+CDD9KhQwfatm1Ls2bNLJsq3pU8aUxENRH5WUT+LSIfiEhFVweklFKZKVa0\nKPVrhbJ19y5eeedvtGjWjKeeesqhfbz44ouUKVMm32MsHGX58uVs27aNmTNnFoi7ujq1asOmHd+Q\n+PvvOe575swZ2rZtS+/evfH29mbq1Kn88MMPnDhxgnfffZd27doVyAICPKeI2I1t7Y4/A/2wTb+9\nXUQKZlaUUh6vWURDVm/eyA+nTzF9ylSHz8BYpEgRRowYwZIlSzh58qRD286rhIQEhg8fTteuXWnT\npo1LY3GUTq3bcCM5mU07vslyH2MMS5d9QK1atThy5AhffPEFGzduZPDgwR49gVReeEQRYYzZaIxZ\nZYw5aozZDLQDSgF5v1illFJO0DTCdhtn3y5PUzs01JI++vXrR8mSJfnb3/5mSfu5NX78eBITE5k2\nbZpL43CkBytVJjQkJMvZK385f55OwwbR+4UX6NixI0ePHqVt28K3kLUnjYm4zRiTICJxQJalXlhY\nGK9Mn4qvz52LQXVs144n27fHFy/K+2Z/yi0+5QYppGW5PdDLh5LeWS82lWzSOOuVCvHx4J15vRYc\nHIyfn1+WbVy+fJmEhIQst/v6+uY42js+Pj7bwWqBgYHZTjObnJzM2bNns+3DI44Dw9nUG2Cy/kYY\n7OOPn2RdW19OTSEhLesxvbn6u9J8AFkfx7Vr124PtnPIceQwut4hr/ObN/7w++qNG7B+7ac8WKEi\nySkp+AVk/Xdhbz6KFSvG8OHDiYqKYtiwYdleRrDq7+rgwYPMnDmTmJgYihcvnu1ASaf+XaWmgVeq\n7b93veZz+zqfMvUdfjrzH366cQ0vr/+2cer0aTo/+yzeXl6s+XAlnbo9bd1xZCM4OJisXx25e7/a\ntnEjK9Z9esfvE65cybbfjMRZq5U5kogUB04D440xMzPZXhfYt+/jT6hb24W3Dt1MheQUCKkC2byB\nqOydOnWKypUr56+R6zcg9ifw8wWfuycjtojm3y4OyXdGrsj9LU74G7h69SoPPPAAPXv2ZMaMGZb0\nkZW0tDSaNGnC5cuXOXjwoF0r+Do837c4IO/7jx2l3lMd2bL4A1o+8igXLl5k4ITxrFz/OV3bPMHs\n0a9TtnE9176+Lfj73n/4EPW6dgKoZ4zZn92+HnE5Q0SmiEhTEaksIo8Aa4AUYIWLQ1NOEBgY6OoQ\nlBNpvvOmRIkSDB06lPnz5+f4zdXRlixZws6dO5k1a5ZdBQS4d77r1KhJxeDyfLJlE2u3bKJWhz+z\nZde3rPj7DFZOe5eypUu7OkSX84giAqgALAf+BfwTOA80Sl8QTBVwrlrRT7mG5jvvBg8ejL+/v1NX\n+Lx48SIjR46kZ8+eNG/e3O523DnfIkKnVq35x4f/pNOAl2hQO4xjn2+ie4eOLlmq3B15RBFhjHnW\nGFPBGFPEGFPJGNPDGPOTq+NSSil3ULJkSYYMGcLcuXM5d+6cU/ocO3YsycnJBXZp8lt6P9WFCkFB\nLI6Zyto58wlyk+m53YVHFBFKKaWyN3ToULy8vPj73/9ueV/ff/898+bN48033yQoKMjy/lypXq1Q\n/r11G707d9GzD5nQIkIppQqA0qVLM2jQIGbNmsVvv1l3pTc1NZUBAwYQFhbGgAEDLOtHeQYtIpRS\nqoB45ZVXSEtLY/r06bna/z//+Q9Tp04lOjqarVu3kpiYmONz5s+fz969e5k9ezY+Ph45S4ByIP0L\nUEqpAqJs2bL079+fGTNmMHz48EwHLV68eJGPP/6YZcuWsX37dgICAihSpAhRUVF4e3tTp04dmjRp\nwmOPPcajjz5KuXLlbj/3/PnzjBkzhsjISBo3buzMQ1NuSs9EKKVUAfLqq6+SnJx8x5wRSUlJrFy5\nkk6dOhEUFET//v3x9/dn8eLF/Prrr1y4cIGjR48ya9Ysqlevzpo1a+jSpQtBQUE8/PDDREZGsmjR\nIoYMGQJATEyMqw5PuRk9E6HcXnJycrazFqqCRfOdP0FBQfTt25fp06dTt25dPv74Y1avXs3Vq1eJ\niIhgypQpPPPMM38YEFmzZk1q1qzJSy+9BNgWldqxY8ftx+LFizHGMHfuXMo68A4Fzbdn0yJCub2z\nZ89aM6Odckua7/wbOXIkc+fOpWPHjlSrVo3hw4fTo0cPqlWrlus2KlSoQPfu3enevTtgm5o7Li6O\niIgIh8aq+fZsWkQopVQBc//997NlyxYCAgKoX7++Q25NLFmyJA0aNHBAdKog0SJCKaUKoCZNmrg6\nBFUI6MBKpZRSStlFiwillFJK2UWLCKWUUkrZRYsIpZRSStlFiwillFJK2UWLCOX2goODXR2CciLN\nd+Gi+fZsWkQot6ez2RUumu/CRfPt2bSIUEoppZRdtIhQSimllF20iFBKKaWUXbSIUEoppZRdtIhQ\nSimllF20iFBKKaWUXbSIUG7v8uXLrg5BOZHmu3DRfHs2LSKU20tISHB1CMqJNN+Fi+bbs2kRoZRS\nSim7aBGhlFJKKbtoEaGUUkopu2gRoZRSSim7aBGhlFJKKbtoEaGUUkopu2gRodyer6+vq0NQTqT5\nLlw0355Niwjl9sqXL+/qEJQTab4LF823Z9MiQimllFJ20SJCKaWUUnbRIkIppZRSdtEiQimllFJ2\n0SJCKaWUUnbRIkIppZRSdtEiQimllFJ20SJCub34+HhXh6CcSPNduGi+PZsWEcrtpaSkuDoE5USa\n78JF8+3ZPKqIEJGBIvKTiCSJyG4RiXB1TMp6a9eudXUIyok034WL5tuzeUwRISLPAO8AUUAd4BCw\nUUTKuDQwZbnPPvvM1SEoJ9J8Fy6ab8/mMUUEMAyYZ4xZaoz5F9APuAZEujYspZRSqnDyiCJCRHyB\nesDWW78zxhhgC9A4u+euWPdpju3nZp+87pvr/VasyH3fudzXlW1a0fcvv/zi0DY13+7dt8Pz/eGH\nuW/PwfkGWLH+89zt5wH5tqJNR+c7T/tZkW9X/ptbcDw58YgiAigDeAO/3vX7X4Gg7J6oRYRz2/SI\nDxXNt1v37fB8f7Qy9+1Z8aGyQYuI7GgR4cA2XVBE+DisJfcSAHD8hx9IuHKF/YcPZbtzbvbJ674J\nV66w/8hhSEuDa5fB3y/z/RIS2L9/f+76zuW+rmzTir6NMflv80YynPoZvLysy/fd+6Wm/SH/mm8n\n5fvufY4fAy8v8M7+e1O+8p2Z1DQSrl5l/4EDWb4H3BGnm+fbijYdne/b+x04cPs1n1XeHf36znOM\njjhuO97bctrv+A8/3PrfgJzaEttVAfeWfjnjGtDFGPNpht8vBgKNMU/dtX8PYJlTg1RKKaUKlp7G\nmOXZ7eARZyKMMSkisg9oCXwKICKS/vOMTJ6yEegJnASuOylMpZRSqiAIAB7A9lmaLY84EwEgIt2A\nxdjuyvgO290aXYHqxpjzLgxNKaWUKpQ84kwEgDFmZfqcENFAOeAg8GctIJRSSinX8JgzEUopBx5B\nSAAABmZJREFUpZRyL55yi6dSSiml3IwWEUoppZSyixYRylIi8pqIfCciV0TkVxFZIyIPZ7JftIjE\ni8g1EdksIg/dtf1FEflKRBJEJE1E7smmTz8ROZi+X20rjktlzpn5FpGT6dtuPVJFZKSVx6f+yNmv\ncRFpn74A4zURuSgiq606NpUzLSKU1ZoA7wINgVaAL7BJRIrc2kFERgGDgL5AA+B3bIurZZydpwiw\nHngLyGkgz2TgTC72U47nzHwbYBy2gdZBQHB638q5nJZzEekCLAUWAqHAI0C28xgoixlj9KEPpz2w\nTWGeBjyW4XfxwLAMP98DJAHdMnl+MyAVuCeL9tsCx4Dq6f3UdvUxF+aHlfkGfgKGuPoY9eGcnGNb\n+uA/QB9XH6M+/vvQMxHK2Upi+5ZxEUBEqmD7FplxcbUrwB5yWFztbiJSDvgH8Bdsb1DK9SzLd7rR\nInJBRPaLyKsi4u2AmFX+WJXzukD59Db3p18a+UJEajoqcJV3WkQop0mfZXQ6sMMY83/pvw7C9oaT\n58XVMrEImG2MOZCvQJVDOCHf/wt0B5oDc4ExwN/sjVfln8U5rwoIEIVtvqD2wCXgaxEpmZ+4lf08\nZrIpVSDMBmoAjzq6YREZAhTnvx8i4ug+VJ5Zlm8AY8z0DD8eFZFkYJ6IvGaMSbGiT5UjK3N+60vv\nRGPMJwAi8hy28U9PA/Mt6FPlQM9EKKcQkZlAO6C5MeZshk2/YPvAL3fXU8qlb8utFthOjd4QkRTg\n1jJ0e0VkkX1RK3s5Id+Z+Q7bF6MH8tmOsoMTcn6rzeO3fmGMSQZ+BCrlOWDlEFpEKMulv7k8CbQw\nxpzOuM0Y8xO2N5KWGfa/B9tI75156GYwEJbh0RbbKdRuwNj8xK/yxkn5zkwdbAP6zuWzHZVHTsr5\nPuAGEJKhHV9sReMpe2NX+aOXM5SlRGQ28CzwP8Dv6YMfARKMMbdWWJ0OjBORE9hWXn0T2ynKtRna\nuXUbXzVs32pqi8hV4LQx5pIx5sxd/f6evt+Pxph4q45P3clZ+RaRRtg+hL4CrmK71e/vwPvGmARr\nj1Jl5MTX+FURmQtMEJEz2AqHkdi+LHxk8WGqrLj69hB9FOwHtm+GqZk8et213xvYbgO7hm352Yfu\n2h6VRVu9sui3cvp2vcWzAOYb21mHXdjuAPgdOIrtA8XX1f8Ghe3hzNc4tts8J2O7tHE5vZ0/ufrf\noDA/dAEupZRSStlFx0QopZRSyi5aRCillFLKLlpEKKWUUsouWkQopZRSyi5aRCillFLKLlpEKKWU\nUsouWkQopZRSyi5aRCillFLKLlpEKKWUUsouWkQopZRSyi5aRCil7CIii0QkTURSRSRZRH4RkU0i\n8pyISB7a6S0il6yMVSllDS0ilFL5sR7byouVgSeAL4H/BT4Tkdy+vwi2lRiVUh5GiwilVH7cMMac\nN8acNcYcNMbEAE8C7YA+ACIyTEQOi0iiiJwWkVkiUjR9WzPgPSAww1mN8enb/ERkqoicSX/urvT9\nlVJuQosIpZRDGWO+Ag4BndN/lQoMBmoAvYAW2JZzBtgJDAWuAOWAYGBq+rZZQEOgGxAKfASsF5EH\nrT8KpVRu6FLgSim7iMgiINAY0zmTbSuAUGNMrUy2dQHmGGPuS/+5NzDNGFM6wz4VgR+BisaYXzL8\nfjOwxxgzzuEHpJTKMx9XB6CUKpBuj3MQkVbAaKA6cA+29x1/EQkwxlzP4vmhgDcQd9cgTT/ggmVR\nK6XyRIsIpZQV/gT8JCKVgc+wXZoYA1wEmgALsBUEWRURxYGbQF0g7a5tiVYErJTKOy0ilFIOJSKP\nYzuT8A5QD9tl01czbO9+11OSsZ11yOhA+u/KGWO+tTBcpVQ+aBGhlMoPfxEpR/oHPtAW26WLT4H3\nsRUTviIyBNsZiceAl+5q4yRQPL34OARcM8b8ICLLgaUi8iq2ouI+4HHgkDFmveVHppTKkd6doZTK\njyeAeOAnbHNGNAMGGWM6GZvDwCvASOAI8Cy2IuM2Y8wuYC7wIXAOGJG+qQ+wFNvdGv8CVgP1gdPW\nHpJSKrf07gyllFJK2UXPRCillFLKLlpEKKWUUsouWkQopZRSyi5aRCillFLKLlpEKKWUUsouWkQo\npZRSyi5aRCillFLKLlpEKKWUUsouWkQopZRSyi5aRCillFLKLlpEKKWUUsou/w8ucJshysElyAAA\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d2c855e50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.dates as mdates\n",
    "import numpy as np\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "years = mdates.YearLocator()\n",
    "yearsFmt = mdates.DateFormatter('%Y')\n",
    "months = mdates.MonthLocator()\n",
    "\n",
    "ax.xaxis.set_major_locator(years)\n",
    "ax.xaxis.set_major_formatter(yearsFmt)\n",
    "ax.xaxis.set_minor_locator(months)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('% of posts from new users')\n",
    "\n",
    "ax.plot(drange3[13:-1], per_new, color = 'black')\n",
    "\n",
    "for pair in seasons[2:]:\n",
    "    ax.axvspan(pair[0], pair[1], alpha=0.5, color='lightpink')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.grid(True, linestyle='--', color='lightgrey')\n",
    "\n",
    "fig.savefig('new_users.png', bbox_inches='tight') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nbgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d4b79b150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.dates as mdates\n",
    "import numpy as np\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "years = mdates.YearLocator()\n",
    "yearsFmt = mdates.DateFormatter('%Y')\n",
    "months = mdates.MonthLocator()\n",
    "\n",
    "ax.xaxis.set_major_locator(years)\n",
    "ax.xaxis.set_major_formatter(yearsFmt)\n",
    "ax.xaxis.set_minor_locator(months)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('Cross-Entropy')\n",
    "\n",
    "ax.plot(drange3[13:-1],[np.median(score) for score in scorel], color = 'black', label='all users')\n",
    "ax.plot(drange3[13:-1],[np.median(score) for score in new_user_scores], color = 'grey', linestyle='--', label='new users')\n",
    "ax.plot(drange3[13:-1],[np.median(score) for score in old_user_scores], color = 'hotpink', linestyle='--', label='existing users')\n",
    "\n",
    "for pair in seasons[2:]:\n",
    "    ax.axvspan(pair[0], pair[1], alpha=0.5, color='lightpink')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.grid(True, linestyle='--', color='lightgrey')\n",
    "\n",
    "ax.legend()\n",
    "\n",
    "fig.savefig('entropy.png', bbox_inches='tight') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n5v5N8ojrzSRfo2xJyzm21n+Dob54UjUzMzPLjO/RMDMzs8w40DAzM7PMONAwMzOzzDjQMDMzs8w4\n0DAzM7PMONAwMzOzzDjQMDMzs8w40DAzM7PMONAwMzOzzDjQMDMzs8w40DCzzEiaK6lLUqek3ZLW\nSXpC0jRJ6kU5l0ranGVbzSwbDjTMLGsLSGbdPBI4B/gzcAfwiKRKj0EimYXTzPYzDjTMLGu7IuLt\niHgrIpZExA+B84FzgakAkq6W1Cppm6RVku6U9J40bQLwa+CgvKsjN6ZpwyXdIml1+tnFaX4zGyQc\naJhZ1UXEImApcGG6qhO4AhgLTAEmkUz3DfAM8C2gHWgExgC3pGl3AicBFwPjgAeABZI+mn0vzKwS\nnibezDIjaS5wUERcWCRtHjAuIj5ZJO0i4OcRcWj6+6XAbRFxSF6eI4A3gCMiYl3e+ieBZyNixoB3\nyMx6raHWDTCzIeud+y4knQlcCxwDjCI5No2QdEBE7Czx+XFAPfBqwY2lw4GNmbXazHrFgYaZ1cqx\nwApJRwKPkHwNcj2wCTgN+BVJ0FAq0BgJdADHA10FaduyaLCZ9Z4DDTOrOkmnk1yR+DFwAsnXuNfk\npTcXfGQ3ydWLfC+k6xoj4ukMm2tm/eBAw8yyNkJSI2lQAEwm+ZrkYeA+koBjmKQrSa5snAp8o6CM\nlcDINEBZCuyIiNck3Q/cK+kaksDjUOB0YGlELMi8Z2bWIz91YmZZOwdYC6wgeafGBODyiLggEq3A\nt4HpwIvAl0gCkXdExGLgLuC3wAbgO2nSVOBekqdQlgPzgc8Aq7LtkplVyk+dmJmZWWZ8RcPMzMwy\n40DDzMzMMuNAw8zMzDLjQMPMzMwy40DDzMzMMuNAw8zMzDLjQMPMzMwy40DDzMzMMuNAw8zMzDLj\nQMPMzMwy40DDzMzMMvN/xNt5LzIsqa0AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d3e205250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.dates as mdates\n",
    "import numpy as np\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "years = mdates.YearLocator()\n",
    "yearsFmt = mdates.DateFormatter('%Y')\n",
    "months = mdates.MonthLocator()\n",
    "\n",
    "ax.xaxis.set_major_locator(years)\n",
    "ax.xaxis.set_major_formatter(yearsFmt)\n",
    "ax.xaxis.set_minor_locator(months)\n",
    "\n",
    "ax.set_xlabel('Date')\n",
    "ax.set_ylabel('Cross-Entropy')\n",
    "\n",
    "ax.plot(drange3[13:-1],[np.mean(score) for score in scorel], color = 'black')\n",
    "ax.plot(drange3[13:-1],[np.mean(score) for score in new_user_scores], color = 'black', linestyle='--')\n",
    "ax.plot(drange3[13:-1],[np.mean(score) for score in old_user_scores], color = 'hotpink', linestyle='--')\n",
    "\n",
    "for pair in seasons[2:]:\n",
    "    ax.axvspan(pair[0], pair[1], alpha=0.5, color='lightpink')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.grid(True, linestyle='--', color='lightgrey')\n",
    "\n",
    "fig.savefig('entropyavg.png', bbox_inches='tight') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "dev_scores = []\n",
    "for i in range(len(splitix)):\n",
    "    dev_scores.append(score_s[i][1000:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from scipy.stats.stats import pearsonr   \n",
    "\n",
    "y = [item for sublist in dev_scores for item in sublist]\n",
    "x = [item for sublist in scorel for item in sublist]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.016631283662157281, 1.9331685099383861e-127)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pearsonr(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f9d5b2083d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax.set_xlabel('Cross_Entropy')\n",
    "ax.set_ylabel('Comment Score')\n",
    "\n",
    "ax.scatter(x,y, color = 'lightpink', alpha=.5)\n",
    "\n",
    "fig.savefig('scores.png') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "output = open('data3.pkl', 'wb')\n",
    "\n",
    "# Pickle dictionary using protocol 0.\n",
    "pickle.dump(scorel, output)\n",
    "\n",
    "output.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "pkl_file = open('data3.pkl', 'rb')\n",
    "\n",
    "scorel = pickle.load(pkl_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "'-o'"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
